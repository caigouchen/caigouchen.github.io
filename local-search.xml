<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>PyCharm配置Anaconda</title>
    <link href="/2022/02/15/PyCharm%E9%85%8D%E7%BD%AEAnaconda/"/>
    <url>/2022/02/15/PyCharm%E9%85%8D%E7%BD%AEAnaconda/</url>
    
    <content type="html"><![CDATA[<h3 id="PyCharm配置Anaconda"><a href="#PyCharm配置Anaconda" class="headerlink" title="PyCharm配置Anaconda"></a>PyCharm配置Anaconda</h3><h4 id="0、写在前面"><a href="#0、写在前面" class="headerlink" title="0、写在前面"></a>0、写在前面</h4><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#时间长不用会忘，不想每次找教程</span><br><span class="hljs-comment">#在win10系统下操作</span><br><span class="hljs-comment">#pycharm和anaconda的下载略</span><br></code></pre></td></tr></table></figure><h4 id="1、环境配置"><a href="#1、环境配置" class="headerlink" title="1、环境配置"></a>1、环境配置</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#新建项目</span><br></code></pre></td></tr></table></figure><p><img src="image-20220215145217429.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#选文件---设置---python解释器</span><br><span class="hljs-comment">#把解释器改成anaconda创建的python环境</span><br></code></pre></td></tr></table></figure><p><img src="image-20220215145254634.png"></p><p><img src="image-20220215145717308.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#这下就能看到环境里面多了好多包</span><br></code></pre></td></tr></table></figure><p><img src="image-20220215145356217.png"></p><h4 id="2、下载python包"><a href="#2、下载python包" class="headerlink" title="2、下载python包"></a>2、下载python包</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#进入cmd环境，激活conda环境，下载python包后，在pycharm中可以刷新到</span><br></code></pre></td></tr></table></figure><p><img src="image-20220215150334532.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>猕猴胎脑CP层ChIP-seq分析(下)</title>
    <link href="/2022/02/10/%E7%8C%95%E7%8C%B4%E8%83%8E%E8%84%91CP%E5%B1%82ChIP-seq%E5%88%86%E6%9E%90-%E4%B8%8B/"/>
    <url>/2022/02/10/%E7%8C%95%E7%8C%B4%E8%83%8E%E8%84%91CP%E5%B1%82ChIP-seq%E5%88%86%E6%9E%90-%E4%B8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="猕猴胎脑CP层ChIP-seq分析-下"><a href="#猕猴胎脑CP层ChIP-seq分析-下" class="headerlink" title="猕猴胎脑CP层ChIP-seq分析(下)"></a>猕猴胎脑CP层ChIP-seq分析(下)</h2><h3 id="上游处理："><a href="#上游处理：" class="headerlink" title="上游处理："></a>上游处理：</h3><h4 id="7、可视化"><a href="#7、可视化" class="headerlink" title="7、可视化"></a>7、可视化</h4><h5 id="igv可视化"><a href="#igv可视化" class="headerlink" title="igv可视化"></a>igv可视化</h5><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">将数据文件载入igv中即可，可以肉眼查看peaks</span><br></code></pre></td></tr></table></figure><p><img src="image-20220210225820922.png"></p><h5 id="deeptools可视化"><a href="#deeptools可视化" class="headerlink" title="deeptools可视化"></a>deeptools可视化</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#将bam文件转换为bw文件</span><br>nohup bamCoverage --normalizeUsing RPKM --binSize <span class="hljs-number">10</span> --extendReads <span class="hljs-number">147</span> -p <span class="hljs-number">10</span> -b p-RM_CP_CTCF.MAPQ30.sort.rmd.bam -o ../peaks/p-RM_CP_CTCF.MAPQ30.sort.rmd.bw &amp;<br>nohup bamCoverage --normalizeUsing RPKM --binSize <span class="hljs-number">10</span> --extendReads <span class="hljs-number">147</span> -p <span class="hljs-number">10</span> -b p-RM_CP_CTCF_input.MAPQ30.sort.rmd.bam -o ../peaks/p-RM_CP_CTCF_input.MAPQ30.sort.rmd.bw &amp;<br><span class="hljs-comment">##############################################################################</span><br><span class="hljs-comment">#查看TSS附近的信号强度</span><br><span class="hljs-comment">#对于单一样本绘图</span><br>cd /sde/ckm/ChIP-seq/RM-CTCF/peaks<br>gtf=/sde/ckm/reference/mmul_10/Macaca_mulatta.Mmul_10<span class="hljs-number">.104</span>.gtf<br>nohup computeMatrix reference-point --referencePoint TSS -S p-RM_CP_CTCF.MAPQ30.sort.rmd.bw -R $gtf -a <span class="hljs-number">3000</span> -b <span class="hljs-number">3000</span> --skipZeros -p <span class="hljs-number">10</span> -o ../TSS/matrix1_RM_CP_CTCF.gz --outFileSortedRegions ../TSS/regions1_RM_CP_CTCF_3k.bed &amp;<br><br>nohup computeMatrix reference-point --referencePoint TSS -S p-RM_CP_CTCF_input.MAPQ30.sort.rmd.bw -R $gtf -a <span class="hljs-number">3000</span> -b <span class="hljs-number">3000</span> --skipZeros -p <span class="hljs-number">10</span> -o ../TSS/matrix1_RM_CP_CTCF_input.gz --outFileSortedRegions ../TSS/regions1_RM_CP_CTCF_input_3k.bed &amp;<br><br>cd /sde/ckm/ChIP-seq/RM-CTCF/TSS<br>nohup plotHeatmap -m matrix1_RM_CP_CTCF.gz -out matrix1_RM_CP_CTCF_Heatmap.png &amp;<br>nohup plotHeatmap -m matrix1_RM_CP_CTCF_input.gz -out matrix1_RM_CP_CTCF_input_Heatmap.png &amp;<br></code></pre></td></tr></table></figure><table><thead><tr><th><img src="image-20220212164411769.png"></th><th><img src="image-20220212164433476.png"></th></tr></thead></table><h4 id="8、homer找motif"><a href="#8、homer找motif" class="headerlink" title="8、homer找motif"></a>8、homer找motif</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#注意传给homer软件的文件格式应该是这样的</span><br><span class="hljs-comment">#第几个peaks 染色体位置 具体位置左 具体位置右 +</span><br><span class="hljs-comment">#eg：../peaks/KI-1_peak_2    chr1       37606594        37606595        +</span><br><span class="hljs-comment">##这里染色体表达一定为chr1，不然会报错</span><br>cp /sde/ckm/reference/mmul_10/rheMac10.fa /sde/ckm/miniconda3/envs/chipseq/share/homer/motifs<br><span class="hljs-comment">#在 v3.1 版本中，HOMER 现在可以处理自定义/任意基因组。</span><br>cd /sde/ckm/ChIP-seq/RM-CTCF/peaks<br>mmul10=~/sde/ckm/miniconda3/envs/chipseq/share/homer/motifs/rheMac10.fa<br><br>awk <span class="hljs-string">&#x27;&#123;print $4&quot;\t&quot;&quot;$1&quot;\t&quot;$2&quot;\t&quot;$3&quot;\t+&quot;&#125;&#x27;</span> picard-RM_CP_CTCF_summits.bed &gt;picard-RM_CP_CTCF.homer_peaks.bed<br>nohup findMotifsGenome.pl picard-RM_CP_CTCF.homer_peaks.bed $mmul10 ../motif/picard-RM_CP_CTCF_motif -<span class="hljs-built_in">len</span> <span class="hljs-number">8</span>,<span class="hljs-number">10</span>,<span class="hljs-number">12</span> -size <span class="hljs-number">200</span> &amp;<br></code></pre></td></tr></table></figure><p><img src="image-20220211145145158.png"><br>| <img src="image-20220212164640726.png"> | <img src="image-20220212164728254.png"> |<br>| ———————————————————— | ———————————————————— |</p><h3 id="下游分析"><a href="#下游分析" class="headerlink" title="下游分析"></a>下游分析</h3><h4 id="1、peaks注释"><a href="#1、peaks注释" class="headerlink" title="1、peaks注释"></a>1、peaks注释</h4><h5 id="R包ChIPpeakAnno"><a href="#R包ChIPpeakAnno" class="headerlink" title="R包ChIPpeakAnno"></a>R包ChIPpeakAnno</h5><h6 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#看peaks大概在哪个基因附近</span><br><span class="hljs-keyword">if</span> (!requireNamespace(<span class="hljs-string">&quot;BiocManager&quot;</span>, quietly = TRUE))<br>  install.packages(<span class="hljs-string">&quot;BiocManager&quot;</span>)<br>BiocManager::install(<span class="hljs-string">&quot;clusterProfiler&quot;</span>)<br>BiocManager::install(<span class="hljs-string">&quot;ChIPpeakAnno&quot;</span>)<br>BiocManager::install(<span class="hljs-string">&quot;ChIPseeker&quot;</span>)<br>BiocManager::install(<span class="hljs-string">&quot;TxDb.Mmulatta.UCSC.rheMac10.refGene&quot;</span>)<br>BiocManager::install(<span class="hljs-string">&quot;org.Mmu.eg.db&quot;</span>)<br><br>rm(<span class="hljs-built_in">list</span> = ls())<br>setwd(<span class="hljs-string">&quot;D:/bioinformatic analysis/chip-seq/RM01/&quot;</span>)<br>library(ChIPseeker)<br>library(clusterProfiler)<br>library(edgeR)<br>library(ChIPpeakAnno)<br>library(TxDb.Mmulatta.UCSC.rheMac10.refGene)<br>library(org.Mmu.eg.db)<br></code></pre></td></tr></table></figure><h6 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h6><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs R">options(connectionObserver = <span class="hljs-literal">NULL</span>)<br>bedpeakfiles=<span class="hljs-string">&quot;picard-RM_CP_CTCF_summits.bed&quot;</span><br>bedpeakfiles<br>txdb=TxDb.Mmulatta.UCSC.rheMac10.refGene<br>peak=readPeakFile(bedpeakfiles)<br><br><span class="hljs-comment">#对peak进行注释</span><br>peakAnno &lt;- annotatePeak(peak, tssRegion=<span class="hljs-built_in">c</span>(-<span class="hljs-number">3000</span>, <span class="hljs-number">3000</span>),<br>                         TxDb=txdb, annoDb=<span class="hljs-string">&quot;org.Mmu.eg.db&quot;</span>)<br><span class="hljs-comment">#结果可视化</span><br>plotAnnoPie(peakAnno)<br>plotAnnoBar(peakAnno)<br></code></pre></td></tr></table></figure><table><thead><tr><th><img src="image-20220212165357591.png"></th><th><img src="image-20220212165426130.png"></th></tr></thead></table><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">#将结果转换模式</span><br>peakAnno=as.data.frame(peakAnno)<br><span class="hljs-comment">#id转换</span><br>symbol_id=peakAnno$SYMBOL<br>entrez_id = mapIds(x = org.Mmu.eg.db,<br>                   keys = symbol_id,<br>                   keytype = <span class="hljs-string">&quot;SYMBOL&quot;</span>,<br>                   column = <span class="hljs-string">&quot;ENTREZID&quot;</span>)<br><br>entrez_id = na.omit(entrez_id)<br><span class="hljs-comment">#GO富集分析</span><br>erich.go.BP = enrichGO(gene = entrez_id,<br>                       OrgDb = org.Mmu.eg.db,<br>                       keyType = <span class="hljs-string">&quot;ENTREZID&quot;</span>,<br>                       ont = <span class="hljs-string">&quot;BP&quot;</span>,<br>                       pvalueCutoff = <span class="hljs-number">0.5</span>,<br>                       qvalueCutoff = <span class="hljs-number">0.5</span>)<br>dotplot(erich.go.BP)<br>erich.go.CC = enrichGO(gene = entrez_id,<br>                       OrgDb = org.Mmu.eg.db,<br>                       keyType = <span class="hljs-string">&quot;ENTREZID&quot;</span>,<br>                       ont = <span class="hljs-string">&quot;CC&quot;</span>,<br>                       pvalueCutoff = <span class="hljs-number">0.5</span>,<br>                       qvalueCutoff = <span class="hljs-number">0.5</span>)<br>barplot(erich.go.CC)<br><span class="hljs-comment">#KEGG pathway</span><br>erich.KEGG = enrichKEGG(<br>  gene = entrez_id,<br>  organism  = <span class="hljs-string">&#x27;mmu&#x27;</span>,<br>  pvalueCutoff  = <span class="hljs-number">0.05</span><br>)<br>barplot(erich.KEGG)<br><span class="hljs-comment">#把揪出来的gene存起来</span><br>id=as.data.frame(symbol_id)<br>write.table(id,file = <span class="hljs-string">&quot;genename1.xls&quot;</span>,row.names = <span class="hljs-literal">FALSE</span>)<br></code></pre></td></tr></table></figure><table><thead><tr><th><img src="image-20220212165648105.png"></th><th><img src="image-20220212165718461.png"></th></tr></thead></table>]]></content>
    
    
    
    <tags>
      
      <tag>组学分析</tag>
      
      <tag>ChIP-seq</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>猕猴胎脑CP层ChIP-seq分析(上)</title>
    <link href="/2022/02/10/%E7%8C%95%E7%8C%B4%E8%83%8E%E8%84%91CP%E5%B1%82ChIP-seq%E5%88%86%E6%9E%90-%E4%B8%8A/"/>
    <url>/2022/02/10/%E7%8C%95%E7%8C%B4%E8%83%8E%E8%84%91CP%E5%B1%82ChIP-seq%E5%88%86%E6%9E%90-%E4%B8%8A/</url>
    
    <content type="html"><![CDATA[<h2 id="猕猴胎脑CP层ChIP-seq分析-上"><a href="#猕猴胎脑CP层ChIP-seq分析-上" class="headerlink" title="猕猴胎脑CP层ChIP-seq分析(上)"></a>猕猴胎脑CP层ChIP-seq分析(上)</h2><h3 id="上游处理："><a href="#上游处理：" class="headerlink" title="上游处理："></a>上游处理：</h3><h4 id="0、需要的软件及需要提前建的目录"><a href="#0、需要的软件及需要提前建的目录" class="headerlink" title="0、需要的软件及需要提前建的目录"></a>0、需要的软件及需要提前建的目录</h4><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#需要的软件</span><br><span class="hljs-comment">#下载：sra-tools</span><br><span class="hljs-comment">#质控：fastqc、multiqc、trim-galore</span><br><span class="hljs-comment">#比对：bowtie2</span><br><span class="hljs-comment">#call peaks：MACS2</span><br><span class="hljs-comment">#可视化：deeptools、igv</span><br><span class="hljs-comment">#motif寻找：homer</span><br><span class="hljs-comment">#需要提前建的目录</span><br>align  clean  motif  peaks  qc  qc_after  raw  sra  TSS<br><span class="hljs-comment">#数据来源：3D Genome of macaque fetal brain reveals evolutionary innovations during primate corticogenesis中猕猴CP层CTCF-chipseq数据</span><br></code></pre></td></tr></table></figure><h4 id="1、下载数据"><a href="#1、下载数据" class="headerlink" title="1、下载数据"></a>1、下载数据</h4><h5 id="wget下载数据"><a href="#wget下载数据" class="headerlink" title="wget下载数据"></a>wget下载数据</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#在写这篇博客时，prefetch下载数据不好使了</span><br>SRR13252796<span class="hljs-comment">#CP-chip-seq</span><br>SRR13252798<span class="hljs-comment">#CTCF-chip-seq input</span><br><span class="hljs-comment">##############################################################################</span><br><span class="hljs-comment">#进入base环境</span><br>source ~/.bashrc &amp;&amp; conda activate chipseq<br>cd /sde/ckm/ChIP-seq/RM-CTCF<br>wget -c https://sra-downloadb.be-md.ncbi.nlm.nih.gov/sos3/sra-pub-run-<span class="hljs-number">20</span>/SRR13252796/SRR13252796<span class="hljs-number">.1</span><br>wget -c https://sra-downloadb.be-md.ncbi.nlm.nih.gov/sos3/sra-pub-run-<span class="hljs-number">21</span>/SRR13252798/SRR13252798<span class="hljs-number">.1</span><br><span class="hljs-comment">#将名字改成真实样品名称</span><br>mv SRR13252796<span class="hljs-number">.1</span> RM_CP_CTCF-ChIP-seq<br>mv SRR13252798<span class="hljs-number">.1</span> RM_CP_CTCF-ChIP-seq_input<br></code></pre></td></tr></table></figure><h5 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#fastq-dump转换为fastq文件：</span><br><span class="hljs-comment">#返回值4为单端测序，8位双端</span><br>fastq-dump -X <span class="hljs-number">1</span> --split-spot -Z RM_CP_CTCF-ChIP-seq | wc -l<br><span class="hljs-comment">#fastq-dump具体参数</span><br><span class="hljs-comment">#--split-3双端单端都可，-O指定生成路径，最后加样品名称</span><br>cd /sde/ckm/ChIP-seq/RM-CTCF/sra<br>nohup fastq-dump --split-<span class="hljs-number">3</span> --gzip * -O ../raw &amp;<br></code></pre></td></tr></table></figure><h4 id="2、数据质控qc"><a href="#2、数据质控qc" class="headerlink" title="2、数据质控qc"></a>2、数据质控qc</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">cd /sde/ckm/ChIP-seq/RM-CTCF/raw<br>ls *.gz |<span class="hljs-keyword">while</span> read <span class="hljs-built_in">id</span>; do (nohup fastqc -t <span class="hljs-number">10</span> -o ../qc $<span class="hljs-built_in">id</span> &amp; );done<br><span class="hljs-comment">###############fastqc主要参数</span><br>fastqc [-o outputdir] [--(no)extract] [-f fastq|bam|sam]  seqfile1-N<br><span class="hljs-comment"># 主要是包括前面的各种选项和最后面的可以加入N个文件</span><br><span class="hljs-comment"># -o：--outdir FastQC生成的报告文件的储存路径，生成的报告的文件名是根据输入来定的</span><br><span class="hljs-comment"># --extract： 生成的报告默认会打包成1个压缩文件，使用这个参数是让程序不打包</span><br><span class="hljs-comment"># -t：--threads 选择程序运行的线程数，每个线程会占用250MB内存，越多越快咯</span><br><span class="hljs-comment"># -c：--contaminants 污染物选项，输入的是一个文件，格式是Name [Tab] Sequence，里面是可能的污染序列，如果有这个选项，FastQC会在计算时候评估污染的情况，并在统计的时候进行分析，一般用不到</span><br><span class="hljs-comment"># -a：--adapters 也是输入一个文件，文件的格式Name [Tab] Sequence，储存的是测序的adpater序列信息，如果不输入，目前版本的FastQC就按照通用引物来评估序列时候有adapter的残留</span><br><span class="hljs-comment"># -q：--quiet 安静运行模式，一般不选这个选项的时候，程序会实时报告运行的状况。</span><br><br><span class="hljs-comment">#multiqc整合结果</span><br>multiqc ./<br><span class="hljs-comment">#看结果这个数据质量一般，所以过滤掉低质量的reads很重要</span><br></code></pre></td></tr></table></figure><p><img src="image-20220208143628790.png"></p><h4 id="3、数据过滤"><a href="#3、数据过滤" class="headerlink" title="3、数据过滤"></a>3、数据过滤</h4><h5 id="trim-galore"><a href="#trim-galore" class="headerlink" title="trim-galore"></a>trim-galore</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">cd /sde/ckm/ChIP-seq/RM-CTCF/raw<br><span class="hljs-comment">#trim-galore</span><br>ls *gz |<span class="hljs-keyword">while</span> read <span class="hljs-built_in">id</span>;do (nohup trim_galore -q <span class="hljs-number">20</span> --phred33 --length <span class="hljs-number">20</span> -e <span class="hljs-number">0.1</span> --stringency <span class="hljs-number">4</span> -o ../clean $<span class="hljs-built_in">id</span> &amp;);done<br><span class="hljs-comment">###############trim_galore主要参数</span><br><span class="hljs-comment"># --phred33：指示 Cutadapt 使用 ASCII+33 质量分数作为 Phred 分数（Sanger/Illumina 1.9+ 编码）进行质量修整。</span><br><span class="hljs-comment"># --stringency &lt;INT&gt;：修剪序列所需的adapter序列重叠。默认为非常严格的设置1，即使是重叠序列的单个碱基对，也会从任何读取的3&#x27;端修剪掉。</span><br><span class="hljs-comment"># -e &lt;ERROR RATE&gt;：最大允许错误率（错误数除以匹配区域的长度）默认值：0.1</span><br><span class="hljs-comment"># --gzip：使用 gzip 压缩输出文件。如果输入文件是 gzip 压缩的，则输出文件也将自动进行 gzip 压缩</span><br><span class="hljs-comment"># --length &lt;INT&gt;：丢弃由于质量或adapter修整而变得比长度INT短的读取。值为0可有效禁用此行为。默认值：20 bp。对于paired-end文件，读取配对的两个读数都需要长于bp才能打印到经过验证的配对末端文件（请参阅选项--paired）。如果只有一次读取变得太短，则可能保留此类未配对的单端读取（请参阅--retain_unpaired）。默认配对截断值：20 bp。</span><br><span class="hljs-comment"># -q/--quality &lt;INT&gt;：除了去除adapter外，还可以从读取中修剪低质量的末端。对于RRBS样品，首先进行质量修整，第二轮进行adapter修整。其他文件在一次通过中进行质量和adapter修剪。该算法与 BWA 使用的算法相同（从所有质量中减去 INT；计算从所有索引到序列末尾的部分和；在总和最小的索引处切割序列）。默认Phred分数：20</span><br></code></pre></td></tr></table></figure><h5 id="fastp"><a href="#fastp" class="headerlink" title="fastp"></a>fastp</h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nohup</span> fastp -i RM_CP_CTCF-ChIP-seq_<span class="hljs-number">1</span>.fastq.gz -I RM_CP_CTCF-ChIP-seq_<span class="hljs-number">2</span>.fastq.gz -o ../clean/RM_CP_CTCF_trim_R<span class="hljs-number">1</span>.fq.gz -O ../clean/RM_CP_CTCF_trim_R<span class="hljs-number">2</span>.fq.gz -w <span class="hljs-number">20</span> --detect_adapter_for_pe &amp;);done<br><span class="hljs-attribute">nohup</span> fastp -i RM_CP_CTCF-ChIP-seq_input_<span class="hljs-number">1</span>.fastq.gz -I RM_CP_CTCF-ChIP-seq_input_<span class="hljs-number">2</span>.fastq.gz -o ../clean/RM_CP_CTCF_input_trim_R<span class="hljs-number">1</span>.fq.gz -O ../clean/RM_CP_CTCF_input_trim_R<span class="hljs-number">2</span>.fq.gz -w <span class="hljs-number">20</span> --detect_adapter_for_pe &amp;);done<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#再次质控</span><br>cd /sde/ckm/ChIP-seq/RM-CTCF/clean<br>ls *.gz |<span class="hljs-keyword">while</span> read <span class="hljs-built_in">id</span>; do (nohup fastqc -t <span class="hljs-number">20</span> -o ../qc_after $<span class="hljs-built_in">id</span> &amp; );done<br>multiqc ./<br><span class="hljs-comment">#过滤完，数据质量是ok的，但是过滤了一半的reads。。。</span><br><span class="hljs-comment">#也可以看到两个软件过滤的对比</span><br></code></pre></td></tr></table></figure><p><img src="image-20220210201437081.png"></p><h4 id="4、比对bowtie2"><a href="#4、比对bowtie2" class="headerlink" title="4、比对bowtie2"></a>4、比对bowtie2</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#注意bowtie2不能对压缩的文件建索引，所以下载好的参考基因组必须要先解压</span><br>cd /sde/ckm/index/bowtie2/mmul_10<br>nohup bowtie2-build --threads <span class="hljs-number">10</span> ~/sde/ckm/reference/mmul_10/rheMac10.fa mmul10 &amp;<br><span class="hljs-comment">#结果</span><br>mmul10<span class="hljs-number">.1</span>.bt2 mmul10<span class="hljs-number">.2</span>.bt2 mmul10<span class="hljs-number">.3</span>.bt2 mmul10<span class="hljs-number">.4</span>.bt2 mmul10.rev<span class="hljs-number">.1</span>.bt2 mmul10.rev<span class="hljs-number">.2</span>.bt2<br><span class="hljs-comment">##############################################################################</span><br><span class="hljs-comment">#比对，生成的sam转bam，并且质控</span><br>cd /sde/ckm/ChIP-seq/RM-CTCF/align<br><span class="hljs-comment">#fastp</span><br>nohup bowtie2 -p <span class="hljs-number">20</span> --very-sensitive -x /sde/ckm/index/bowtie2/mmul_10/mmul10 -<span class="hljs-number">1</span> ../clean/RM_CP_CTCF_trim_R1.fq.gz -<span class="hljs-number">2</span> ../clean/RM_CP_CTCF_trim_R2.fq.gz | samtools view -@ <span class="hljs-number">20</span> -bS -q <span class="hljs-number">30</span> -o RM_CP_CTCF.MAPQ30.bam &amp;<br>nohup bowtie2 -p <span class="hljs-number">20</span> --very-sensitive -x /sde/ckm/index/bowtie2/mmul_10/mmul10 -<span class="hljs-number">1</span> ../clean/RM_CP_CTCF_input_trim_R1.fq.gz -<span class="hljs-number">2</span> ../clean/RM_CP_CTCF_input_trim_R2.fq.gz | samtools view -@ <span class="hljs-number">20</span> -bS -q <span class="hljs-number">30</span> -o RM_CP_CTCF_input.MAPQ30.bam &amp;<br><span class="hljs-comment">#trim-galore结果有问题，我得再看看文献啥的，查查为什么，所以后续均用fastp过滤的结果</span><br><span class="hljs-comment">#给bam排序</span><br>nohup samtools sort -@ <span class="hljs-number">20</span> RM_CP_CTCF.MAPQ30.bam -o RM_CP_CTCF.MAPQ30.sort.bam &amp;<br>nohup samtools sort -@ <span class="hljs-number">20</span> RM_CP_CTCF_input.MAPQ30.bam -o RM_CP_CTCF_input.MAPQ30.sort.bam &amp;<br></code></pre></td></tr></table></figure><h4 id="5、去除PCR重复"><a href="#5、去除PCR重复" class="headerlink" title="5、去除PCR重复"></a>5、去除PCR重复</h4><h5 id="picard"><a href="#picard" class="headerlink" title="picard"></a>picard</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#picard</span><br>picard=/sde/ckm/miniconda3/envs/chipseq/share/picard-<span class="hljs-number">2.25</span><span class="hljs-number">.7</span>-<span class="hljs-number">0</span>/picard.jar<br><span class="hljs-comment">#测试picard是否安装了</span><br>java -jar $picard -h<br><span class="hljs-comment">#去除pcr重复（时间较长）</span><br>cd /sde/ckm/ChIP-seq/RM-CTCF/align<br>nohup java -jar $picard MarkDuplicates INPUT=RM_CP_CTCF.MAPQ30.sort.bam OUTPUT=p-RM_CP_CTCF.MAPQ30.sort.rmd.bam REMOVE_DUPLICATES=true METRICS_FILE=RM_CP_CTCF.marked_dup_metrics.txt &amp;<br>nohup java -jar $picard  MarkDuplicates INPUT=RM_CP_CTCF_input.MAPQ30.sort.bam OUTPUT=p-RM_CP_CTCF_input.MAPQ30.sort.rmd.bam REMOVE_DUPLICATES=true METRICS_FILE=RM_CP_CTCF_input.marked_dup_metrics.txt &amp;<br><br><span class="hljs-comment">#对比对质控</span><br>ls *p-* |xargs -i samtools index &#123;&#125; <span class="hljs-comment">#文件为.bai</span><br>samtools flagstat p-RM_CP_CTCF.MAPQ30.sort.rmd.bam&gt; p-RM_CP_CTCF.MAPQ30.sort.rmd.bam.stat<br>samtools flagstat p-RM_CP_CTCF_input.MAPQ30.sort.rmd.bam &gt; p-RM_CP_CTCF_input.MAPQ30.sort.rmd.bam.stat<br><span class="hljs-comment">#查看结果</span><br>cat *.stat |grep <span class="hljs-string">&quot;mapped (&quot;</span><br><span class="hljs-comment">#我都有点怀疑这个数据是不是真的，100%正常么</span><br><span class="hljs-number">27427512</span> + <span class="hljs-number">0</span> mapped (<span class="hljs-number">100.00</span>% : N/A)<br><span class="hljs-number">16521250</span> + <span class="hljs-number">0</span> mapped (<span class="hljs-number">100.00</span>% : N/A)<br></code></pre></td></tr></table></figure><h5 id="sambamba"><a href="#sambamba" class="headerlink" title="sambamba"></a>sambamba</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">nohup sambamba markdup -r -t 20 RM_CP_CTCF.MAPQ30.sort.bam RM_CP_CTCF.MAPQ30.sort.rmd.bam &amp;<br>nohup sambamba markdup -r -t 20 RM_CP_CTCF_input.MAPQ30.sort.bam RM_CP_CTCF_input.MAPQ30.sort.rmd.bam &amp;<br><span class="hljs-meta">#</span><span class="bash">-r, --remove-duplicates</span><br><span class="hljs-meta">#</span><span class="bash">-t, --nthreads</span><br></code></pre></td></tr></table></figure><h4 id="6、MACS2找peaks"><a href="#6、MACS2找peaks" class="headerlink" title="6、MACS2找peaks"></a>6、MACS2找peaks</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">picard</span><br>nohup macs2 callpeak -c p-RM_CP_CTCF_input.MAPQ30.sort.rmd.bam -t p-RM_CP_CTCF.MAPQ30.sort.rmd.bam -f BAM --nomodel --extsize 147 -g mm -n ../peaks/picard-RM_CP_CTCF -B &amp;<br><span class="hljs-meta">#</span><span class="bash">sambamba</span><br>nohup macs2 callpeak -c RM_CP_CTCF_input.MAPQ30.sort.rmd.bam -t RM_CP_CTCF.MAPQ30.sort.rmd.bam -f BAM --nomodel --extsize 147 -g mm -n ../peaks/sambamba-RM_CP_CTCF -B &amp;<br><span class="hljs-meta">#</span><span class="bash">macs2主要参数</span><br>-c：对照组<br>-t：实验组<br>-f：-t和-c的文件格式，如果不指定会自动检索<br>-B：更多信息保存到bedgraph中<br>-g：hs为human，mm为小鼠<br>-n：为输出文件的前缀名，可指定输出文件夹<br>-q：默认值为0.05，按此阈值来筛选peak<br><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#############################################################################</span></span><br><span class="hljs-meta">#</span><span class="bash">bed文件:一般代表区域信息，如表示Peak位置的bed文件，表示基因注释的bed文件。</span><br>bed文件一行表示一个gene，对应信息如下:<br>必须包含的3列信息：<br>1）chrom：染色体名字 (e.g.chr3, chrY, chr2_random或者scaffold10671)。<br>2）chromStart：基因在染色体或scaffold上的起始位置（0-based）。<br>3）chromEnd：基因在染色体或scaffold上的终止位置 （前闭后开）。<br>可选的9列信息：<br>4）name：bed文件的行名。<br>5）score：本条基因在注释数据集文件中的评分（0-1000），在Genome Browser中会根据不同区段的评分显示对应的阴影强度（评分越高灰度越高）。<br>6）strand：链的方向+、-或. (.表示不确定链的方向)<br>7）thickStart：CDS区（编码区）的起始位置，即起始密码子的位置。<br>8）thickEnd：The endingposition at which the feature is drawn thickly (for example the stop codon ingene displays).<br>9）itemRgb：RGB颜色值（如：255,0,0），方便在GenomeBrowser中查看。<br>10）blockCount：bed行中外显子的数目。<br>11）blockSizes：逗号分割的列，数目与blockCount值对应，每个数表示对应外显子的碱基数。<br>12）blockStarts：逗号分割的列，数目与blockCount值对应，每个数表示对应外显子的起始位置（数值是相对ChromStart计算的）<br><span class="hljs-meta">#</span><span class="bash">bdg、bw文件</span><br>导入基因组浏览器查看比对状态和突变信息。wiggle(简称wig)、bigwig(简写bw)以及bedgraph(简写bdg)只包含区域和区域的覆盖度信息，文件更小，用于可视化更方便，可以导入基因组浏览器（Genome Browser）中进行可视化，以查看reads在参考基因组各个区域的覆盖度并检测测序深度。<br>wiggle：展示区域的密度或强度信息，如GCpercent, probability scores, and transcriptome data.<br>bedGraph: bed与wig的结合，更省空间和灵活，展示信息与wig类似。 (bedGraph的格式一般有四列，Chr、start、end和value，并且坐标是以0为起始左闭右开)<br>bigWig: wig文件的二进制压缩格式，可通过wigToBigWig工具转换<br><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#############################################################################</span></span><br><span class="hljs-meta">#</span><span class="bash">结果</span><br>wc -l picard-RM_CP_CTCF_summits.bed<br>33671 picard-RM_CP_CTCF_summits.bed<br><span class="hljs-meta">#</span><span class="bash">结果</span><br>wc -l fastp-RM_CP_CTCF_summits.bed<br>33671 fastp-RM_CP_CTCF_summits.bed<br><span class="hljs-meta">#</span><span class="bash">picard结果和sambamba结果一毛一样</span><br></code></pre></td></tr></table></figure><p><img src="image-20220210220849746.png"></p><p><img src="image-20220210221139367.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>组学分析</tag>
      
      <tag>ChIP-seq</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>运行HicPro出现Makefile:141:recipe_for_target&#39;bowtie_pairing&#39;failed报错及解决过程</title>
    <link href="/2022/01/29/%E8%BF%90%E8%A1%8CHicPro%E5%87%BA%E7%8E%B0mergeSAM%E6%8A%A5%E9%94%99%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B/"/>
    <url>/2022/01/29/%E8%BF%90%E8%A1%8CHicPro%E5%87%BA%E7%8E%B0mergeSAM%E6%8A%A5%E9%94%99%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="运行HicPro出现Makefile-141-recipe-for-target-‘bowtie-pairing’-failed报错及解决过程"><a href="#运行HicPro出现Makefile-141-recipe-for-target-‘bowtie-pairing’-failed报错及解决过程" class="headerlink" title="运行HicPro出现Makefile:141: recipe for target ‘bowtie_pairing’ failed报错及解决过程"></a>运行HicPro出现Makefile:141: recipe for target ‘bowtie_pairing’ failed报错及解决过程</h3><h4 id="0、出现错误"><a href="#0、出现错误" class="headerlink" title="0、出现错误"></a>0、出现错误</h4><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs python">起始是在处理自己猕猴hic数据时，运行到mergeSAM.log这一步就停了<br>找了好几天原因，一直不明白，这让我非常抓狂<br></code></pre></td></tr></table></figure><p><img src="image-20220128130622717.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#查看cat mergeSAM.log</span><br></code></pre></td></tr></table></figure><p><img src="image-20220207162304557.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#在github上对于这个问题的解释是因为bam文件中reads的名字不一致</span><br>https://groups.google.com/g/hic-pro/c/93QNSvPxPrg<br><span class="hljs-comment">#这个说是因为我的内存不够导致的</span><br>https://github.com/nservant/HiC-Pro/issues/<span class="hljs-number">369</span><br><span class="hljs-comment">#我随后去看了我的fastq文件和bam文件</span><br><br><span class="hljs-comment">#分别取原始测序数据和比对后bam文件的名字</span><br>samtools view RM01_CP_Hi-C_R1_mmul10.bwt2merged.bam |awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span> |head -<span class="hljs-number">1000</span> &gt; RM01_CP_Hi-C_merge1.txt<br><span class="hljs-comment">#fastq文件:是配对的</span><br><span class="hljs-meta">@E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">27539</span>:<span class="hljs-number">1766</span> <span class="hljs-number">1</span>:N:<span class="hljs-number">0</span>:NATGAGCG+NGGCTATA</span><br><span class="hljs-meta">@E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">27681</span>:<span class="hljs-number">1766</span> <span class="hljs-number">1</span>:N:<span class="hljs-number">0</span>:NATGAGCG+NGGCTCTC</span><br><span class="hljs-meta">@E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">28290</span>:<span class="hljs-number">1766</span> <span class="hljs-number">1</span>:N:<span class="hljs-number">0</span>:NATGAGCG+NGGCTATA</span><br><span class="hljs-meta">@E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">28351</span>:<span class="hljs-number">1766</span> <span class="hljs-number">1</span>:N:<span class="hljs-number">0</span>:NATGAGCG+NGGCTATA</span><br><span class="hljs-meta">@E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">28879</span>:<span class="hljs-number">1766</span> <span class="hljs-number">1</span>:N:<span class="hljs-number">0</span>:NATGAGCG+NGGCTATA</span><br><span class="hljs-meta">@E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">29082</span>:<span class="hljs-number">1766</span> <span class="hljs-number">1</span>:N:<span class="hljs-number">0</span>:NATGAGCG+NGGCTATA</span><br><span class="hljs-meta">@E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">29812</span>:<span class="hljs-number">1766</span> <span class="hljs-number">1</span>:N:<span class="hljs-number">0</span>:NATGAGCG+NGGCTATA</span><br><span class="hljs-meta">@E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">1326</span>:<span class="hljs-number">1784</span> <span class="hljs-number">1</span>:N:<span class="hljs-number">0</span>:NCTGAGCG+NGGCTATA</span><br>--------------------------------------<br><span class="hljs-meta">@E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">27539</span>:<span class="hljs-number">1766</span> <span class="hljs-number">2</span>:N:<span class="hljs-number">0</span>:NATGAGCG+NGGCTATA</span><br><span class="hljs-meta">@E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">27681</span>:<span class="hljs-number">1766</span> <span class="hljs-number">2</span>:N:<span class="hljs-number">0</span>:NATGAGCG+NGGCTCTC</span><br><span class="hljs-meta">@E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">28290</span>:<span class="hljs-number">1766</span> <span class="hljs-number">2</span>:N:<span class="hljs-number">0</span>:NATGAGCG+NGGCTATA</span><br><span class="hljs-meta">@E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">28351</span>:<span class="hljs-number">1766</span> <span class="hljs-number">2</span>:N:<span class="hljs-number">0</span>:NATGAGCG+NGGCTATA</span><br><span class="hljs-meta">@E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">28879</span>:<span class="hljs-number">1766</span> <span class="hljs-number">2</span>:N:<span class="hljs-number">0</span>:NATGAGCG+NGGCTATA</span><br><span class="hljs-meta">@E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">29082</span>:<span class="hljs-number">1766</span> <span class="hljs-number">2</span>:N:<span class="hljs-number">0</span>:NATGAGCG+NGGCTATA</span><br><span class="hljs-meta">@E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">29812</span>:<span class="hljs-number">1766</span> <span class="hljs-number">2</span>:N:<span class="hljs-number">0</span>:NATGAGCG+NGGCTATA</span><br><span class="hljs-meta">@E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">1326</span>:<span class="hljs-number">1784</span> <span class="hljs-number">2</span>:N:<span class="hljs-number">0</span>:NCTGAGCG+NGGCTATA</span><br>------------------------------------------------------------------------                 <br><span class="hljs-comment">#bam文件：reads名字确实不配对</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">27539</span>:<span class="hljs-number">1766</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">27681</span>:<span class="hljs-number">1766</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">28290</span>:<span class="hljs-number">1766</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">28351</span>:<span class="hljs-number">1766</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">28879</span>:<span class="hljs-number">1766</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">29082</span>:<span class="hljs-number">1766</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">2422</span>:<span class="hljs-number">1784</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">3985</span>:<span class="hljs-number">1784</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">4533</span>:<span class="hljs-number">1784</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">4675</span>:<span class="hljs-number">1784</span><br>--------------------------------------<br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">27539</span>:<span class="hljs-number">1766</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">27681</span>:<span class="hljs-number">1766</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">2686</span>:<span class="hljs-number">1784</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">3985</span>:<span class="hljs-number">1784</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">4533</span>:<span class="hljs-number">1784</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">5345</span>:<span class="hljs-number">1784</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">5426</span>:<span class="hljs-number">1784</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">5589</span>:<span class="hljs-number">1784</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">5852</span>:<span class="hljs-number">1784</span><br>E00487:<span class="hljs-number">297</span>:HJ7GKCCXY:<span class="hljs-number">3</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">6766</span>:<span class="hljs-number">1784</span><br></code></pre></td></tr></table></figure><h4 id="1、尝试解决1-索引问题"><a href="#1、尝试解决1-索引问题" class="headerlink" title="1、尝试解决1-索引问题"></a>1、尝试解决1-索引问题</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">参考这个博主https://lxz9.com/<span class="hljs-number">2021</span>/07/<span class="hljs-number">18</span>/HiC-Pro/的经历<br>因为上面比对完bam文件确实是因为reads名称不一致导致的<br>所以我以为出现mergeSAM报错是因为索引构建有问题，重新构建一遍索引就可以<br>结果失败了，我重新构建了一遍，还是同样的错误<br><span class="hljs-comment">#参考基因组是esamble数据库下载的mmul10版本</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#所以接下来为了节省时间，我取原始测试数据的前8000000行做测试数据跑，看怎样才能解决问题</span><br>zcat RM01_CP_Hi-C_R1.fq.gz|head -<span class="hljs-number">8000000</span> &gt;RM01_CP_Hi-C_test_R1.fq.gz<br>zcat RM01_CP_Hi-C_R2.fq.gz|head -<span class="hljs-number">8000000</span> &gt;RM01_CP_Hi-C_test_R2.fq.gz<br></code></pre></td></tr></table></figure><p><img src="image-20220128191931060.png"></p><h4 id="2、尝试解决2-参考基因组"><a href="#2、尝试解决2-参考基因组" class="headerlink" title="2、尝试解决2-参考基因组"></a>2、尝试解决2-参考基因组</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#这个时候还在考虑是不是还是索引的问题</span><br><span class="hljs-comment">#怀疑是不是我什么参考基因组下错了，所以把各个版本的参考基因组都下了下来</span><br><span class="hljs-number">1</span>、esamble数据库下载的mmul10的参考基因组<br>nohup /sde/ckm/software/hicpro/HiC-Pro-<span class="hljs-number">3</span>/HiC-Pro_3<span class="hljs-number">.1</span><span class="hljs-number">.0</span>/<span class="hljs-built_in">bin</span>/HiC-Pro -i hic_input_mmul8 -o hic_output_mmul10e -c config-hicpro-mmul10e.txt &amp;<br><span class="hljs-number">2</span>、UCSC数据库下载的mmul8的参考基因组<br>nohup /sde/ckm/software/hicpro/HiC-Pro-<span class="hljs-number">3</span>/HiC-Pro_3<span class="hljs-number">.1</span><span class="hljs-number">.0</span>/<span class="hljs-built_in">bin</span>/HiC-Pro -i hic_input_mmul8 -o hic_output_mmul8 -c config-hicpro-mmul8.txt &amp;<br><span class="hljs-number">3</span>、UCSC数据库下载的mmul10的参考基因组<br>nohup /sde/ckm/software/hicpro/HiC-Pro-<span class="hljs-number">3</span>/HiC-Pro_3<span class="hljs-number">.1</span><span class="hljs-number">.0</span>/<span class="hljs-built_in">bin</span>/HiC-Pro -i hic_input_mmul8 -o hic_output_mmul10 -c config-hicpro-mmul10.txt &amp;<br><span class="hljs-comment">#结果都没问题！</span><br><span class="hljs-comment">#并且查看mapping_combine.log，查看samtools排序情况一切正常</span><br><span class="hljs-comment">#测试数据一切正常说明这个参数是没有问题的</span><br></code></pre></td></tr></table></figure><p><img src="image-20220128195523024.png"></p><p><img src="image-20220128203030213.png"></p><p><img src="image-20220128200223308.png"></p><h4 id="3、尝试解决3-内存不够-症结"><a href="#3、尝试解决3-内存不够-症结" class="headerlink" title="3、尝试解决3-内存不够(症结)"></a>3、尝试解决3-内存不够(症结)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#仔细再看了一遍，参考这个问题https://github.com/nservant/HiC-Pro/issues/369</span><br><span class="hljs-comment">#再次查看一遍真实数据hic_output_mmul10</span><br>cat mapping_combine.log<br></code></pre></td></tr></table></figure><p><img src="image-20220207162459836.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#参考这个问题https://github.com/nservant/HiC-Pro/issues/392，因为内存不够</span><br><span class="hljs-comment">#查看服务器内存</span><br>df -h<br><span class="hljs-comment">#查看服务器上可用线程数</span><br>grep <span class="hljs-string">&#x27;processor&#x27;</span> /proc/cpuinfo | sort -u | wc -l<br></code></pre></td></tr></table></figure><h4 id="4、总结"><a href="#4、总结" class="headerlink" title="4、总结"></a>4、总结</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#综上所述，原因是因为服务器内存不够，流泪熊猫头呜呜呜呜呜呜</span><br><span class="hljs-comment">#所以要解决这个问题就是换大的服务器内存，或者修改SORT_RAM的值即可</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Hi-C</tag>
      
      <tag>组学分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>生信分析中常用的linux命令</title>
    <link href="/2022/01/21/%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84linux%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/01/21/%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84linux%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h3 id="生信分析中常用的linux命令"><a href="#生信分析中常用的linux命令" class="headerlink" title="生信分析中常用的linux命令"></a>生信分析中常用的linux命令</h3><h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 经常忘记命令，放在网上好查询，写一遍博客复习一遍</span><br><span class="hljs-comment"># 持续更新中……</span><br></code></pre></td></tr></table></figure><h4 id="一、linux基本命令"><a href="#一、linux基本命令" class="headerlink" title="一、linux基本命令"></a>一、linux基本命令</h4><h5 id="1、查看命令帮助"><a href="#1、查看命令帮助" class="headerlink" title="1、查看命令帮助"></a>1、查看命令帮助</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1</span>、man(mannal)命令<br><span class="hljs-comment">#回车键：一次滚动手册一行</span><br><span class="hljs-comment">#空格：一次滚动一屏/页</span><br><span class="hljs-comment">#/-加option：搜索</span><br><span class="hljs-comment">#q：退出</span><br><span class="hljs-number">2</span>、命令 --<span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure><h5 id="2、显示文件和目录"><a href="#2、显示文件和目录" class="headerlink" title="2、显示文件和目录"></a>2、显示文件和目录</h5><h6 id="1）pwd：显示当前路径"><a href="#1）pwd：显示当前路径" class="headerlink" title="1）pwd：显示当前路径"></a>1）pwd：显示当前路径</h6><h6 id="2）tree：以树状形式列出文件夹的内容"><a href="#2）tree：以树状形式列出文件夹的内容" class="headerlink" title="2）tree：以树状形式列出文件夹的内容"></a>2）tree：以树状形式列出文件夹的内容</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">tree：当前目录<br>tree aaa：指定目录<br></code></pre></td></tr></table></figure><h6 id="3）ls：以列表的方式列出文件夹中的内容（list）"><a href="#3）ls：以列表的方式列出文件夹中的内容（list）" class="headerlink" title="3）ls：以列表的方式列出文件夹中的内容（list）"></a>3）ls：以列表的方式列出文件夹中的内容（list）</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#显示结果中：蓝色表示目录，白色表示文件，绿色表示可执行文件，红色表示压缩包</span><br>ls -a：（<span class="hljs-built_in">all</span>）显示所有文件，包括隐藏文件（.开头）<br>ls -l：以较长格式的方式显示内容/详细信息<br><span class="hljs-comment">#文件类型描述（-表示这是一个文件，d为一个目录，l为链接文件）、文件的权限、硬链接数（快捷方式）、文件所属的用户、文件所属的组、文件大小（以字节为单位）、文件夹最后修改时间、文件名称</span><br>ls -h：以人性化方式显示文件内容（文件大小以kb大小显示）<br></code></pre></td></tr></table></figure><h5 id="3、cd：切换工作目录"><a href="#3、cd：切换工作目录" class="headerlink" title="3、cd：切换工作目录"></a>3、cd：切换工作目录</h5><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">绝对路径：<span class="hljs-keyword">cd</span> <span class="hljs-string">/home/......</span><br>相对路径：<span class="hljs-string">./</span> 在当前目录，<span class="hljs-string">../</span> 回到上一级目录<br>一键回到家目录：<span class="hljs-keyword">cd</span> <span class="hljs-string">/cd</span> ~<br>回到上次所在的目录 <span class="hljs-keyword">cd</span> -<br></code></pre></td></tr></table></figure><h5 id="4、创建文件和文件夹"><a href="#4、创建文件和文件夹" class="headerlink" title="4、创建文件和文件夹"></a>4、创建文件和文件夹</h5><h6 id="1）mkdir：创建文件夹"><a href="#1）mkdir：创建文件夹" class="headerlink" title="1）mkdir：创建文件夹"></a>1）mkdir：创建文件夹</h6><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arduino">mkdir：创建单个文件夹<br>mkdir -p：递归创建目录<br></code></pre></td></tr></table></figure><h6 id="2）touch：创建文件"><a href="#2）touch：创建文件" class="headerlink" title="2）touch：创建文件"></a>2）touch：创建文件</h6><figure class="highlight irpf90"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs irpf90"><span class="hljs-keyword">touch</span>：后面加多个或一个文件（直接后面加文件名字）<br></code></pre></td></tr></table></figure><h6 id="3）gedit：编辑文件"><a href="#3）gedit：编辑文件" class="headerlink" title="3）gedit：编辑文件"></a>3）gedit：编辑文件</h6><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">gedit：打开一个文件进行编辑<br></code></pre></td></tr></table></figure><h5 id="5、rm：删除文件夹-文件（remove）"><a href="#5、rm：删除文件夹-文件（remove）" class="headerlink" title="5、rm：删除文件夹/文件（remove）"></a>5、rm：删除文件夹/文件（remove）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">rm -i 文件夹名：以交互模式删除，yes/y表示确认删除，no/y表示否<br>rm -f 文件夹名：强制删除，不做任何提示<br>rm -r：删除文件夹以及递归删除里面的文件<br></code></pre></td></tr></table></figure><h5 id="6、cp：拷贝（copy）"><a href="#6、cp：拷贝（copy）" class="headerlink" title="6、cp：拷贝（copy）"></a>6、cp：拷贝（copy）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">cp 源文件路径 目标文件路径<br><span class="hljs-comment">#-i：如果被复制的文件夹内有同名的文件，给出提示，交互模式拷贝</span><br><span class="hljs-comment">#-f：强制覆盖不提示</span><br><span class="hljs-comment">#-v：查看整个拷贝的过程</span><br><span class="hljs-comment">#-a：拷贝原有属性</span><br>cp -r：拷贝整个文件夹<br></code></pre></td></tr></table></figure><h5 id="7、移动文件和文件夹"><a href="#7、移动文件和文件夹" class="headerlink" title="7、移动文件和文件夹"></a>7、移动文件和文件夹</h5><h6 id="1）mv：移动文件"><a href="#1）mv：移动文件" class="headerlink" title="1）mv：移动文件"></a>1）mv：移动文件</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">mv 源路径 目标路径<br><span class="hljs-comment">#-i：交互式移动</span><br><span class="hljs-comment">#-v：显示移动过程</span><br><span class="hljs-comment">#-f：强制覆盖不提示</span><br></code></pre></td></tr></table></figure><h6 id="2）重命名"><a href="#2）重命名" class="headerlink" title="2）重命名"></a>2）重命名</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#在一个目录中进行移动才能进行重命名</span><br>mv 原文件名/文件夹名 新文件名/文件夹名<br></code></pre></td></tr></table></figure><h5 id="8、查看文件内容"><a href="#8、查看文件内容" class="headerlink" title="8、查看文件内容"></a>8、查看文件内容</h5><h6 id="1）查看文件内容cat"><a href="#1）查看文件内容cat" class="headerlink" title="1）查看文件内容cat"></a>1）查看文件内容cat</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#显示文件的完整内容</span><br>cat -b：显示内容的行的行号（不包含空行）<br>cat -n：会显示所有行的行号（显示空行）<br></code></pre></td></tr></table></figure><h6 id="2）分屏显示文件内容more"><a href="#2）分屏显示文件内容more" class="headerlink" title="2）分屏显示文件内容more"></a>2）分屏显示文件内容more</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">空格键：显示手册页的下一屏<br>回车：每次滚动一行<br><span class="hljs-comment">#q：退出</span><br><span class="hljs-comment">#b：回滚一屏</span><br><span class="hljs-comment">#f：前滚一屏</span><br></code></pre></td></tr></table></figure><h6 id="3）搜索文件内容grep"><a href="#3）搜索文件内容grep" class="headerlink" title="3）搜索文件内容grep"></a>3）搜索文件内容grep</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1</span>、简单查找：<br>grep 搜索的内容  文本名<br><span class="hljs-comment">#-n 显示匹配行及行号</span><br><span class="hljs-comment">#-v 显示不包含匹配文本及行号</span><br><span class="hljs-comment">#-i  忽略大小写</span><br><span class="hljs-number">2</span>、模式查找：（正则表达式）<br><span class="hljs-number">3</span>、行首匹配：在行首搜索有xxx的行，格式grep ^xxx 文件名<br><span class="hljs-number">4</span>、行尾匹配：在行尾搜索有xxx的行，格式grep xxx $ 文件名<br></code></pre></td></tr></table></figure><h5 id="9、其它常用指令"><a href="#9、其它常用指令" class="headerlink" title="9、其它常用指令"></a>9、其它常用指令</h5><h6 id="1）查看命令位置which"><a href="#1）查看命令位置which" class="headerlink" title="1）查看命令位置which"></a>1）查看命令位置which</h6><h6 id="2）查找文件find"><a href="#2）查找文件find" class="headerlink" title="2）查找文件find"></a>2）查找文件find</h6><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">find</span> [路径] -name “*条件”<br></code></pre></td></tr></table></figure><h6 id="3）软硬链接"><a href="#3）软硬链接" class="headerlink" title="3）软硬链接"></a>3）软硬链接</h6><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs excel"><span class="hljs-number">1</span>、软链接：类似于windows下的快捷方式<br><span class="hljs-built_in">ln</span> -s 被链接的源文件绝对路径 链接文件名<br><span class="hljs-number">2</span>、硬链接<br><span class="hljs-built_in">ln</span> 被链接的源文件绝对路径 链接文件名<br></code></pre></td></tr></table></figure><h6 id="4）打包压缩"><a href="#4）打包压缩" class="headerlink" title="4）打包压缩"></a>4）打包压缩</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1</span>、tar.gz，tar是最常用的备份工具<br>打包：tar -cvf 打包文件名.tar 被打包的文件/路径……<br>解包：tar -xvf 打包文件名.tar<br><span class="hljs-number">2</span>、压缩：gzip  <br><span class="hljs-built_in">zip</span> -r xxx.<span class="hljs-built_in">zip</span> 你想压缩的文件夹路径<br><span class="hljs-number">3</span>、合在一起：<br>压缩文件：tar -zcvf 打包文件名.tar.gz 被压缩的文件/路径<br>解压缩文件：tar -zxvf 打包文件名.tar.gz<br>解压缩到指定路径：tar -zxvf 打包文件名.tar.gz -C 目标路径<br><span class="hljs-number">4</span>、bzip2：xxx.tar.bz2<br>压缩文件：tar -jcvf 打包文件.tar.bz2 被压缩的文件/路径……<br>解压缩文件：tar -jxvf 打包文件名.tar.bz2trere<br><span class="hljs-comment">#c：生成档案文件，创建打包文件</span><br><span class="hljs-comment">#x：解开档案文件</span><br><span class="hljs-comment">#v：列出归档解档的详细过程，显示进度</span><br><span class="hljs-comment">#f：指定档案文件名称，f后面一定是.tar文件</span><br></code></pre></td></tr></table></figure><h6 id="5）软件安装apt"><a href="#5）软件安装apt" class="headerlink" title="5）软件安装apt"></a>5）软件安装apt</h6><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmake">安装软件：sudo apt <span class="hljs-keyword">install</span> 软件包<br>卸载软件：sudo apt <span class="hljs-keyword">remove</span> 软件包<br>更新已安装的包：sudo apt upgrade<br></code></pre></td></tr></table></figure><h6 id="6）echo在终端中显示你输入的内容"><a href="#6）echo在终端中显示你输入的内容" class="headerlink" title="6）echo在终端中显示你输入的内容"></a>6）echo在终端中显示你输入的内容</h6><h6 id="7）重定向"><a href="#7）重定向" class="headerlink" title="7）重定向"></a>7）重定向</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">表示输出，会覆盖文件原有的内容：&gt;<br>表示追加，会将内容追加到已有文件的末尾：&gt;&gt;<br><span class="hljs-built_in">echo</span> 内容&gt;文件名：可以直接创建一个文件并且把内容写进去，也可以结合前面的命令将显示在终端的结果写入文件中<br></code></pre></td></tr></table></figure><h6 id="8）管道"><a href="#8）管道" class="headerlink" title="8）管道 |"></a>8）管道 |</h6><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">可以将一个命令的输出可以通过管道作为另一个命令的输入<span class="hljs-comment">;可以用来过滤执行结果</span><br></code></pre></td></tr></table></figure><h4 id="二、远程管理"><a href="#二、远程管理" class="headerlink" title="二、远程管理"></a>二、远程管理</h4><h5 id="1、查看或配置网卡设置信息"><a href="#1、查看或配置网卡设置信息" class="headerlink" title="1、查看或配置网卡设置信息"></a>1、查看或配置网卡设置信息</h5><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm">网卡是一个专门负责网络通讯的硬件设备，<span class="hljs-built_in">IP</span>地址是设置在网卡上的地址信息<br></code></pre></td></tr></table></figure><h6 id="1）ifconfig：查看-设置计算机当前的网卡配置信息"><a href="#1）ifconfig：查看-设置计算机当前的网卡配置信息" class="headerlink" title="1）ifconfig：查看/设置计算机当前的网卡配置信息"></a>1）ifconfig：查看/设置计算机当前的网卡配置信息</h6><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">查看网卡配置信息：ifconfig <span class="hljs-string">| grep inet</span><br></code></pre></td></tr></table></figure><h6 id="2）ping：检测到目标ip地址的连接是否正常"><a href="#2）ping：检测到目标ip地址的连接是否正常" class="headerlink" title="2）ping：检测到目标ip地址的连接是否正常"></a>2）ping：检测到目标ip地址的连接是否正常</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">ping ip地址<br><span class="hljs-comment">#检测当前的计算机到目标计算机的网络是否畅通，数值越大，速度越慢</span><br></code></pre></td></tr></table></figure><h5 id="2、远程登录和复制文件"><a href="#2、远程登录和复制文件" class="headerlink" title="2、远程登录和复制文件"></a>2、远程登录和复制文件</h5><h6 id="1）一些概念"><a href="#1）一些概念" class="headerlink" title="1）一些概念"></a>1）一些概念</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1</span>、ssh基础(secure  shell)：<br>数据传输是加密和压缩的，可以防止信息泄露，提高传输速度,在ssh客服端和ssh服务器安装对应的软件,ssh客服端linux默认安装<br><span class="hljs-number">2</span>、域名、端口号<br>域名：是ip地址的别名<br>端口号：通过端口号可以找到计算机上运行的应用程序<br>SSH服务器默认端口：<span class="hljs-number">22</span><br>ssh [-p  port]  user@remote<br><span class="hljs-comment">#user：是远程机器上的用户名，如果不指定的话默认为当前用户</span><br><span class="hljs-comment">#remote：是远程机器的地址，可以使IP/域名，或者是后面会提到的别名</span><br><span class="hljs-comment">#port：是SSH Server监听的端口，如果不指定默认22</span><br>用exit退出登录<br></code></pre></td></tr></table></figure><h6 id="2）远程拷贝文件scp：secure-copy"><a href="#2）远程拷贝文件scp：secure-copy" class="headerlink" title="2）远程拷贝文件scp：secure copy"></a>2）远程拷贝文件scp：secure copy</h6><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span>、把本地复制到远程计算机<br>scp <span class="hljs-operator">-</span>P port 本地文件 <span class="hljs-keyword">user</span><span class="hljs-variable">@remote</span>：远程文件<br><span class="hljs-number">2</span>、把远程计算机本地复制到本地<br>scp <span class="hljs-operator">-</span>P port <span class="hljs-keyword">user</span><span class="hljs-variable">@remote</span>：远程文件 本地文件 <br>scp <span class="hljs-operator">-</span>r <span class="hljs-keyword">user</span><span class="hljs-variable">@remote</span>：远程文件夹 本地文件夹<br></code></pre></td></tr></table></figure><h5 id="3、免密码登录"><a href="#3、免密码登录" class="headerlink" title="3、免密码登录"></a>3、免密码登录</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1</span>、配置公钥<br>ssh-keygen：生成SSH钥匙，然后一路回车<br>产生：id_rsa（私钥）、id_rsa.pub（公钥）加密文件<br>使用公钥加密的数据需要使用私钥解密，使用私钥加密的数据使用公钥解密<br><span class="hljs-number">2</span>、上传公钥到服务器<br>ssh-copy-<span class="hljs-built_in">id</span>  -p  port  user@remote；可以让远程服务器记住我们的公钥<br><span class="hljs-number">3</span>、配置别名<br>在.ssh文件夹中创建config 文件<br>在~/.ssh/config 文件中追加<br>Host 别名<br>  HostName ip地址<br>  User 远层计算机用户名<br>  Port <span class="hljs-number">22</span><br>然后就可以用ssh 别名进行连接了 <br></code></pre></td></tr></table></figure><h4 id="三、用户权限相关命令"><a href="#三、用户权限相关命令" class="headerlink" title="三、用户权限相关命令"></a>三、用户权限相关命令</h4><h5 id="1、对于文件-目录的权限："><a href="#1、对于文件-目录的权限：" class="headerlink" title="1、对于文件/目录的权限："></a>1、对于文件/目录的权限：</h5><table><thead><tr><th>序号</th><th>权限</th><th>英文</th><th>编写</th><th>数字代号</th></tr></thead><tbody><tr><td>01</td><td>读</td><td>read</td><td>r</td><td>4</td></tr><tr><td>02</td><td>写</td><td>write</td><td>w</td><td>2</td></tr><tr><td>03</td><td>执行</td><td>excute</td><td>x</td><td>1</td></tr></tbody></table><h6 id="ls-l扩展"><a href="#ls-l扩展" class="headerlink" title="ls-l扩展"></a>ls-l扩展</h6><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">可以以列表的方式查看<br>第<span class="hljs-number">2</span>个起表示权限<span class="hljs-number">9</span>个字母，<span class="hljs-number">3</span>个为一组：第一组：所有者权限；第二组：组权限；第三组：其他用户权限<br>硬链接数可以查看文件夹后面的子目录<br>chmod修改用户<span class="hljs-regexp">/组对文件/</span>目录的权限：chmod -<span class="hljs-regexp">/+ rwx 文件名/</span>目录<br></code></pre></td></tr></table></figure><h5 id="2、超级用户：root"><a href="#2、超级用户：root" class="headerlink" title="2、超级用户：root"></a>2、超级用户：root</h5><h6 id="1）创建组、删除组"><a href="#1）创建组、删除组" class="headerlink" title="1）创建组、删除组"></a>1）创建组、删除组</h6><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo groupadd 组名：添加组<br>sudo groupdel  组名：删除组<br>sudo chgrp -R 组名、文件<span class="hljs-regexp">/目录名：递归修改文件/</span>目录的所属组<br></code></pre></td></tr></table></figure><h6 id="2）创建用户、设置密码、删除用户"><a href="#2）创建用户、设置密码、删除用户" class="headerlink" title="2）创建用户、设置密码、删除用户"></a>2）创建用户、设置密码、删除用户</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1</span>、sudo useradd -m -g 组名 用户名：添加新用户<br><span class="hljs-comment">#-m自动建立用户家目录</span><br><span class="hljs-comment">#-g指定用户所在的组，否则会建立一个和用户同名的组</span><br><span class="hljs-number">2</span>、sudo passwd 用户名：设置用户密码<br><span class="hljs-number">3</span>、sudo userdel -r 用户名：删除用户（-r删除用户家目录<br></code></pre></td></tr></table></figure><h6 id="3）查看用户信息"><a href="#3）查看用户信息" class="headerlink" title="3）查看用户信息"></a>3）查看用户信息</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1</span>、<span class="hljs-built_in">id</span>  用户名：查看用户UID和GID信息<br>/etc/password：文件存放的是用户的信息，由<span class="hljs-number">6</span>个分组组成<span class="hljs-number">7</span>个信息，分别是：<br><span class="hljs-comment">#1、用户名</span><br><span class="hljs-comment">#2、密码（x表示加密的密码）</span><br><span class="hljs-comment">#3、UID：用户标识</span><br><span class="hljs-comment">#4、GID：组标识</span><br><span class="hljs-comment">#5、用户全名或本地账号</span><br><span class="hljs-comment">#6、家目录</span><br><span class="hljs-comment">#7、登录时使用的Shell，就是登录之后使用的终端命令，ubuntu默认是dash</span><br><span class="hljs-number">2</span>、who 查看当前所有登录的用户列表<br><span class="hljs-number">3</span>、whoami查看当前登录的账户名<br><span class="hljs-number">4</span>、usermod设置用户的主组/附加组和登录Shell<br>主组：通常在新建立用户时指定，在etc/passwd的第<span class="hljs-number">4</span>列GID对应的值<br>附加组：在etc/group中最后一列表示该组的用户列表，用于指定用户的附加权限<br>sudo usermod -G 组 用户名：修改附加组<br>sudo usermod -g 组 用户名：修改主组<br>sudo usermod -s /<span class="hljs-built_in">bin</span>/bash 用户名：修改shell，在windows中使用不方便，用此命令就可以改变<br></code></pre></td></tr></table></figure><h6 id="4）which查看执行命令所处位置"><a href="#4）which查看执行命令所处位置" class="headerlink" title="4）which查看执行命令所处位置"></a>4）which查看执行命令所处位置</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">etc/passwd：用户保存用户信息文件<br>/user/<span class="hljs-built_in">bin</span>/passwd：用户修改用户密码的程序<br><span class="hljs-built_in">bin</span>：二进制可执行文件目录，主要用于具体应用<br>sbin：是系统管理员专用的二进制代码存放目录，主要用于系统管理<br>/user/<span class="hljs-built_in">bin</span>：后期安装的一些软件<br>/user/sbin：超级用户的一些管理程序<br></code></pre></td></tr></table></figure><h6 id="5）切换用户"><a href="#5）切换用户" class="headerlink" title="5）切换用户"></a>5）切换用户</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">su（-）用户名：切换用户，（-切换目录）<br><span class="hljs-comment">#不接用户名：可以切换到root用户</span><br>exit：退出当前登录用户<br></code></pre></td></tr></table></figure><h6 id="6）修改文件权限"><a href="#6）修改文件权限" class="headerlink" title="6）修改文件权限"></a>6）修改文件权限</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">1、chown：修改拥有者<br>chown  用户名  文件名/目录名<br>2、chgrp：修改组<br>3、chmod：修改文件权限<br>chmod  -R  755  文件名/目录的权限<br><span class="hljs-meta">#</span><span class="bash">755（三个数字）分别对应拥有者、组用户、其他与用户的权限</span><br><span class="hljs-meta">#</span><span class="bash">-R递归的修改目录及子目录的所有权限</span><br></code></pre></td></tr></table></figure><h5 id="3、系统信息相关的命令"><a href="#3、系统信息相关的命令" class="headerlink" title="3、系统信息相关的命令"></a>3、系统信息相关的命令</h5><h6 id="1）时间和日期"><a href="#1）时间和日期" class="headerlink" title="1）时间和日期"></a>1）时间和日期</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">cal  -<span class="hljs-number">3</span>/-y/-j：默认显示当前月的日历<br><span class="hljs-comment">#-3 打印当前月、上月、下月</span><br><span class="hljs-comment">#-y 打印一年</span><br><span class="hljs-comment">#-j 显示一年中的第多少天</span><br>date：查看系统时间<br></code></pre></td></tr></table></figure><h6 id="2）磁盘信息"><a href="#2）磁盘信息" class="headerlink" title="2）磁盘信息"></a>2）磁盘信息</h6><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">df -h：<span class="hljs-keyword">disk </span>free 显示磁盘的剩余空间<br>du -h[目录名]：<span class="hljs-keyword">disk </span>usage 显示目录下的文件大小平时<br></code></pre></td></tr></table></figure><h6 id="3）进程信息"><a href="#3）进程信息" class="headerlink" title="3）进程信息"></a>3）进程信息</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">进程：当前正在执行的程序 PID进程代号<br>-----------------------------------------------------------<br>ps a/u/s：process status查看进程的详细状况<br><span class="hljs-comment">#a：显示终端上的所有进程</span><br><span class="hljs-comment">#u：显示进程的详细状态</span><br><span class="hljs-comment">#s：显示没有控制终端的进程</span><br>top：动态显示运行中的进程并且排序，q退出<br>kill [-<span class="hljs-number">9</span>] 进程代号：终止指定代号的进程，-<span class="hljs-number">9</span>表示强行终止<br></code></pre></td></tr></table></figure><h4 id="四、进阶"><a href="#四、进阶" class="headerlink" title="四、进阶"></a>四、进阶</h4><h5 id="1、shell脚本"><a href="#1、shell脚本" class="headerlink" title="1、shell脚本"></a>1、shell脚本</h5><h6 id="1）shell基础知识"><a href="#1）shell基础知识" class="headerlink" title="1）shell基础知识"></a>1）shell基础知识</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">shell脚本---&gt;解释器(bash、sh)---&gt;解释---&gt;执行<br><span class="hljs-comment">#查看shell种类</span><br>cat /etc/shells<br><span class="hljs-comment">#shell种类</span><br><span class="hljs-comment">#/bin/sh：是bash的一个快捷方式</span><br><span class="hljs-comment">#/bin/bash：是大多数linux默认的shell，包含的功能几乎可以涵盖shell的所有功能</span><br><span class="hljs-comment">#/sbin/nologin：表示非交互，不能登录的操作系统</span><br><span class="hljs-comment">#/bin/dash：小巧、高效，功能较少</span><br></code></pre></td></tr></table></figure><h6 id="2）基本语法"><a href="#2）基本语法" class="headerlink" title="2）基本语法"></a>2）基本语法</h6><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">1</span>、#！/bin/bash（必写）<br><span class="hljs-number">2</span>、#注释内容：例如<span class="hljs-type">name</span>、describe、<span class="hljs-type">path</span>、<span class="hljs-keyword">usage</span>、<span class="hljs-keyword">update</span><br><span class="hljs-number">3</span>、脚本具体内容<br><span class="hljs-number">4</span>、chmod +x 文件名：给执行权限<br><span class="hljs-number">5</span>、执行：绝对路径 xx.sh或者相对路径:./xx.sh<br></code></pre></td></tr></table></figure><h6 id="3）shell变量"><a href="#3）shell变量" class="headerlink" title="3）shell变量"></a>3）shell变量</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">变量名=变量值<br>调用变量：echo $变量名/echo $&#123;变量名&#125;<br>取消变量：unset 变量名<br></code></pre></td></tr></table></figure><h6 id="4）流程控制与循环"><a href="#4）流程控制与循环" class="headerlink" title="4）流程控制与循环"></a>4）流程控制与循环</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1</span>、流程控制<br><span class="hljs-keyword">if</span> [condition];then<br>    command<br>    command<br>fi<br>--------------------------<br><span class="hljs-keyword">if</span> [condition];then<br>    command1<br>  <span class="hljs-keyword">else</span><br>    command2<br>fi<br>--------------------------<br><span class="hljs-keyword">if</span> [condition1];then<br>    command<br>   <span class="hljs-keyword">elif</span> [condition2];then<br>    command2  <br>   <span class="hljs-keyword">else</span><br>    command3<br>fi<br>----------------------------------------------------<br><span class="hljs-number">2</span>、循环<br><span class="hljs-keyword">for</span> variable <span class="hljs-keyword">in</span> &#123;<span class="hljs-built_in">list</span>&#125;<br>do<br>    command1<br>    command2<br>done<br>--------------------------<br><span class="hljs-keyword">for</span>((exp1;exp2;exp3))<br>do<br>    command<br>done<br></code></pre></td></tr></table></figure><h5 id="2、一些常用命令"><a href="#2、一些常用命令" class="headerlink" title="2、一些常用命令"></a>2、一些常用命令</h5><h6 id="1）cut用法"><a href="#1）cut用法" class="headerlink" title="1）cut用法"></a>1）cut用法</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#-d：自定义分隔符</span><br><span class="hljs-comment">#-f：指定显示哪个区域</span><br><span class="hljs-comment">#-b：以字节为分割单位</span><br></code></pre></td></tr></table></figure><h6 id="2）sort用法"><a href="#2）sort用法" class="headerlink" title="2）sort用法"></a>2）sort用法</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#-u：在输出行中去除重复</span><br><span class="hljs-comment">#-r：降序排序</span><br><span class="hljs-comment">#-o：将排序结果写入文件</span><br><span class="hljs-comment">#-t：设置间隔符</span><br><span class="hljs-comment">#-k：指定列数</span><br></code></pre></td></tr></table></figure><h6 id="3）wc用法"><a href="#3）wc用法" class="headerlink" title="3）wc用法"></a>3）wc用法</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#-c：只显示bytes数</span><br><span class="hljs-comment">#-l：显示行数</span><br><span class="hljs-comment">#-w：只显示字数</span><br><span class="hljs-comment">#不加任何参数，默认计算文件的行数，字数及字节数</span><br></code></pre></td></tr></table></figure><h6 id="4）xargs用法"><a href="#4）xargs用法" class="headerlink" title="4）xargs用法"></a>4）xargs用法</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">xargs：给命令传递参数的过滤器/组合多个命令<br><span class="hljs-comment">#-i：将xargs每项名称，一般一行一行赋值给&#123;&#125;</span><br><span class="hljs-comment">#-d：分隔符，默认分隔符为回车</span><br></code></pre></td></tr></table></figure><h6 id="5）awk用法"><a href="#5）awk用法" class="headerlink" title="5）awk用法"></a>5）awk用法</h6><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">awk <span class="hljs-operator">-F</span> <span class="hljs-string">&#x27;分隔符&#x27;</span> <span class="hljs-string">&#x27;&#123;pattern action&#125;&#x27;</span> 文件名<br><span class="hljs-variable">$0</span>表示所有域，<span class="hljs-variable">$k</span>表示第k个域<br></code></pre></td></tr></table></figure><h6 id="6）sed用法"><a href="#6）sed用法" class="headerlink" title="6）sed用法"></a>6）sed用法</h6><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">sed</span> <span class="hljs-string">&#x27;s/要被取代的字符串/新字符串/g&#x27;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>双序列全局比对：Biopython包的应用及手撕Needleman-Wunsch算法</title>
    <link href="/2022/01/18/python%E5%AE%9E%E7%8E%B0Needleman-Wunsch%E7%AE%97%E6%B3%95/"/>
    <url>/2022/01/18/python%E5%AE%9E%E7%8E%B0Needleman-Wunsch%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="双序列全局比对"><a href="#双序列全局比对" class="headerlink" title="双序列全局比对"></a>双序列全局比对</h2><h3 id="python实现Needleman-Wunsch算法"><a href="#python实现Needleman-Wunsch算法" class="headerlink" title="python实现Needleman-Wunsch算法"></a>python实现Needleman-Wunsch算法</h3><h4 id="0、写在前面"><a href="#0、写在前面" class="headerlink" title="0、写在前面"></a>0、写在前面</h4><figure class="highlight vala"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># 需要的知识：动态规划算法</span><br><span class="hljs-meta"># 具体有关算法的知识可以参考以下链接</span><br><span class="hljs-meta"># https://en.wikipedia.org/wiki/Needleman-Wunsch_algorithm（维基百科Needleman-Wunsch算法）</span><br><span class="hljs-meta"># https://www.bilibili.com/video/BV1zW411L79R?p=36（山东大学mooc：生物信息学：双序列全局比对）</span><br><span class="hljs-meta"># 在配对、错配和空位罚分的处理上简化了算法，应该是一个计分矩阵的</span><br></code></pre></td></tr></table></figure><h4 id="1、代码过程"><a href="#1、代码过程" class="headerlink" title="1、代码过程"></a>1、代码过程</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">import</span> numpy as np<br><span class="hljs-attribute">from</span> Bio.Seq import Seq<br><br><span class="hljs-attribute">match_award</span> = <span class="hljs-number">1</span>  # 配对得一分<br><span class="hljs-attribute">mismatch_penalty</span> = -<span class="hljs-number">1</span>  # 错配罚<span class="hljs-number">1</span>分<br><span class="hljs-attribute">gap_penalty</span> = -<span class="hljs-number">1</span>  # 空位罚分<span class="hljs-number">1</span>分<br><span class="hljs-attribute">optimum</span> = None  # 存储最优比对<br><br><br><span class="hljs-attribute">def</span> match_score(a, b):  # 判断是配对还是错配<br>    <span class="hljs-attribute">if</span> a == b:<br>        <span class="hljs-attribute">return</span> match_award<br>    <span class="hljs-attribute">else</span>:<br>        <span class="hljs-attribute">return</span> mismatch_penalty<br><br><br><span class="hljs-attribute">def</span> needleman_wunsch(seq<span class="hljs-number">1</span>, seq<span class="hljs-number">2</span>):<br>    <span class="hljs-attribute">m</span>, n = len(seq<span class="hljs-number">2</span>), len(seq<span class="hljs-number">1</span>)<br>    <span class="hljs-attribute">score_matrix</span> = np.zeros((m + <span class="hljs-number">1</span>, n + <span class="hljs-number">1</span>), dtype=int)  # 初始化打分矩阵<br>    <span class="hljs-attribute">for</span> i in range(<span class="hljs-number">0</span>, m + <span class="hljs-number">1</span>):  # 初始化第一列<br>        <span class="hljs-attribute">score_matrix</span>[i][<span class="hljs-number">0</span>] = gap_penalty * i<br>    <span class="hljs-attribute">for</span> j in range(<span class="hljs-number">0</span>, n + <span class="hljs-number">1</span>):  # 初始化第一行<br>        <span class="hljs-attribute">score_matrix</span>[<span class="hljs-number">0</span>][j] = gap_penalty * j<br>    <span class="hljs-attribute">for</span> i in range(<span class="hljs-number">1</span>, m + <span class="hljs-number">1</span>):  # 从斜上、上、左找最大值，并记录路径<br>        <span class="hljs-attribute">for</span> j in range(<span class="hljs-number">1</span>, n + <span class="hljs-number">1</span>):<br>            <span class="hljs-attribute">diagonal</span> = score_matrix[i - <span class="hljs-number">1</span>][j - <span class="hljs-number">1</span>] + match_score(seq<span class="hljs-number">2</span>[i - <span class="hljs-number">1</span>], seq<span class="hljs-number">1</span>[j - <span class="hljs-number">1</span>])<br>            <span class="hljs-attribute">up</span> = score_matrix[i - <span class="hljs-number">1</span>][j] + gap_penalty<br>            <span class="hljs-attribute">left</span> = score_matrix[i][j - <span class="hljs-number">1</span>] + gap_penalty<br>            <span class="hljs-attribute">max_pointer</span> = max(diagonal, up, left)<br>            <span class="hljs-attribute">score_matrix</span>[i][j] = max_pointer<br>    <span class="hljs-attribute">return</span> score_matrix<br><br><br><span class="hljs-comment"># 回溯出比对好的序列,并记录最优比对</span><br><span class="hljs-attribute">def</span> traceback_seq(score_matrix):<br>    <span class="hljs-attribute">align1</span>, align<span class="hljs-number">2</span> = &#x27;&#x27;, &#x27;&#x27;<br>    <span class="hljs-attribute">i</span>, j = score_matrix.shape[<span class="hljs-number">0</span>]-<span class="hljs-number">1</span>, score_matrix.shape[<span class="hljs-number">1</span>]-<span class="hljs-number">1</span><br>    <span class="hljs-attribute">a</span> = np.array([[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>]])<br>    <span class="hljs-attribute">flag</span> = True<br>    <span class="hljs-attribute">global</span> optimum<br>    <span class="hljs-attribute">while</span> i &gt; <span class="hljs-number">0</span> and j &gt; <span class="hljs-number">0</span>:<br>        <span class="hljs-attribute">score_current</span> = score_matrix[i][j]<br>        <span class="hljs-attribute">score_diagonal</span> = score_matrix[i - <span class="hljs-number">1</span>][j - <span class="hljs-number">1</span>]<br>        <span class="hljs-attribute">score_up</span> = score_matrix[i][j - <span class="hljs-number">1</span>]<br>        <span class="hljs-attribute">score_left</span> = score_matrix[i - <span class="hljs-number">1</span>][j]<br>        <span class="hljs-attribute">a</span>[:, :<span class="hljs-number">2</span>] = j, i<br>        <span class="hljs-attribute">if</span> score_current == score_diagonal + match_score(seq<span class="hljs-number">2</span>[i - <span class="hljs-number">1</span>], seq<span class="hljs-number">1</span>[j - <span class="hljs-number">1</span>]):<br>            <span class="hljs-attribute">align1</span> += seq<span class="hljs-number">2</span>[i - <span class="hljs-number">1</span>]<br>            <span class="hljs-attribute">align2</span> += seq<span class="hljs-number">1</span>[j - <span class="hljs-number">1</span>]<br>            <span class="hljs-attribute">i</span> -= <span class="hljs-number">1</span><br>            <span class="hljs-attribute">j</span> -= <span class="hljs-number">1</span><br>        <span class="hljs-attribute">elif</span> score_current == score_left + gap_penalty:<br>            <span class="hljs-attribute">align1</span> += seq<span class="hljs-number">2</span>[i - <span class="hljs-number">1</span>]<br>            <span class="hljs-attribute">align2</span> += &#x27;-&#x27;<br>            <span class="hljs-attribute">i</span> -= <span class="hljs-number">1</span><br>        <span class="hljs-attribute">elif</span> score_current == score_up + gap_penalty:<br>            <span class="hljs-attribute">align1</span> += &#x27;-&#x27;<br>            <span class="hljs-attribute">align2</span> += seq<span class="hljs-number">1</span>[j - <span class="hljs-number">1</span>]<br>            <span class="hljs-attribute">j</span> -= <span class="hljs-number">1</span><br>        <span class="hljs-attribute">a</span>[:, <span class="hljs-number">2</span>:] = j, i<br>        <span class="hljs-attribute">if</span> flag:<br>            <span class="hljs-attribute">optimum</span> = np.copy(a)<br>            <span class="hljs-attribute">flag</span> = False<br>        <span class="hljs-attribute">else</span>:<br>            <span class="hljs-attribute">optimum</span> = np.concatenate((optimum, a), axis=<span class="hljs-number">0</span>)<br>    <span class="hljs-attribute">a</span>[:, :<span class="hljs-number">2</span>] = a[:, <span class="hljs-number">2</span>:]<br>    <span class="hljs-attribute">while</span> i &gt; <span class="hljs-number">0</span>:<br>        <span class="hljs-attribute">align1</span> += seq<span class="hljs-number">2</span>[i - <span class="hljs-number">1</span>]<br>        <span class="hljs-attribute">align2</span> += &#x27;-&#x27;<br>        <span class="hljs-attribute">i</span> -= <span class="hljs-number">1</span><br>        <span class="hljs-attribute">a</span>[:, <span class="hljs-number">2</span>:] = j, i<br>        <span class="hljs-attribute">optimum</span> = np.concatenate((optimum, a), axis=<span class="hljs-number">0</span>)<br>    <span class="hljs-attribute">while</span> j &gt; <span class="hljs-number">0</span>:<br>        <span class="hljs-attribute">align1</span> += &#x27;-&#x27;<br>        <span class="hljs-attribute">align2</span> += seq<span class="hljs-number">1</span>[j - <span class="hljs-number">1</span>]<br>        <span class="hljs-attribute">j</span> -= <span class="hljs-number">1</span><br>        <span class="hljs-attribute">a</span>[:, <span class="hljs-number">2</span>:] = j, i<br>        <span class="hljs-attribute">optimum</span> = np.concatenate((optimum, a), axis=<span class="hljs-number">0</span>)<br>    <span class="hljs-attribute">return</span> align<span class="hljs-number">1</span>, align<span class="hljs-number">2</span><br><br><span class="hljs-comment"># 序列</span><br><span class="hljs-attribute">seq1</span> = Seq(<span class="hljs-string">&quot;GAAG&quot;</span>)<br><span class="hljs-attribute">seq2</span> = Seq(<span class="hljs-string">&quot;GAT&quot;</span>)<br><span class="hljs-attribute">score_matrix</span> = needleman_wunsch(seq<span class="hljs-number">1</span>, seq<span class="hljs-number">2</span>)<br><span class="hljs-attribute">align1</span>, align<span class="hljs-number">2</span> = traceback_seq(score_matrix)<br><br><span class="hljs-attribute">print</span>(<span class="hljs-string">&quot;计分矩阵为\n&quot;</span>, score_matrix)<br><span class="hljs-attribute">print</span>(<span class="hljs-string">&quot;比对序列结果为：&quot;</span>)<br><span class="hljs-attribute">print</span>(align<span class="hljs-number">1</span>)<br><span class="hljs-attribute">print</span>(align<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><h4 id="2、结果"><a href="#2、结果" class="headerlink" title="2、结果"></a>2、结果</h4><img src="../python实现Needleman-Wunsch算法/image-20220118135345317.png"><h3 id="Biopython实现序列比对：Bio-Align包"><a href="#Biopython实现序列比对：Bio-Align包" class="headerlink" title="Biopython实现序列比对：Bio.Align包"></a>Biopython实现序列比对：Bio.Align包</h3><h4 id="0、写在前面-1"><a href="#0、写在前面-1" class="headerlink" title="0、写在前面"></a>0、写在前面</h4><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># 没有仔细学过，只是为了课程需要，后期应该会认真学</span><br><span class="hljs-meta"># Biopython详见：https://biopython.org/</span><br></code></pre></td></tr></table></figure><h4 id="1、代码过程-1"><a href="#1、代码过程-1" class="headerlink" title="1、代码过程"></a>1、代码过程</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> Bio import<span class="hljs-built_in"> Align</span><br><span class="hljs-built_in"></span><span class="hljs-comment"># classBio.Align.PairwiseAlignment(target, query, path, score)</span><br>aligner = Align.PairwiseAligner()<br>alignments = aligner.align(<span class="hljs-string">&quot;GAACT&quot;</span>, <span class="hljs-string">&quot;GATAC&quot;</span>)<br>alignment = alignments[0]<br><span class="hljs-builtin-name">print</span>(alignment)<br><span class="hljs-builtin-name">print</span>(<span class="hljs-string">&quot;#######################结果分割线##########################&quot;</span>)<br><span class="hljs-comment"># classBio.Align.PairwiseAligner(**kwargs)</span><br><span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">&#x27;</span><br><span class="hljs-string">使用动态规划执行成对序列比对</span><br><span class="hljs-string">这提供了在两个序列之间获得全局和局部比对的函数。</span><br><span class="hljs-string">全局比对找到两个序列中所有字符之间的最佳一致性。局部对齐只找到对齐最好的子序列</span><br><span class="hljs-string">要执行成对序列比对，首先创建一个 PairwiseAligner 对象</span><br><span class="hljs-string">该对象存储匹配和不匹配分数，以及差距分数</span><br><span class="hljs-string">通常，匹配分数为正，而错配分数和差距分数为负或零。默认情况下，匹配分数为 1，不匹配和差距分数为零。</span><br><span class="hljs-string">根据间隙分数的值，PairwiseAligner 对象自动选择适当的对齐算法（Needleman-Wunsch、Smith-Waterman、Gotoh 或 Waterman-Smith-Beyer ）</span><br><span class="hljs-string">&#x27;</span><span class="hljs-string">&#x27;&#x27;</span><br>aligner = Align.PairwiseAligner()<br>alignments = aligner.align(<span class="hljs-string">&quot;GAACT&quot;</span>, <span class="hljs-string">&quot;GATAC&quot;</span>)<br><span class="hljs-keyword">for</span> alignment <span class="hljs-keyword">in</span> sorted(alignments):<br>    <span class="hljs-builtin-name">print</span>(<span class="hljs-string">&quot;Score = %.1f:&quot;</span> % alignment.score)<br>    <span class="hljs-builtin-name">print</span>(alignment)<br><span class="hljs-builtin-name">print</span>(<span class="hljs-string">&quot;#######################结果分割线##########################&quot;</span>)<br><span class="hljs-comment"># 也可进行局部比对</span><br>aligner.mode = <span class="hljs-string">&#x27;local&#x27;</span><br>alignments = aligner.align(<span class="hljs-string">&quot;TACCG&quot;</span>, <span class="hljs-string">&quot;ACG&quot;</span>)<br><span class="hljs-keyword">for</span> alignment <span class="hljs-keyword">in</span> sorted(alignments):<br>    <span class="hljs-builtin-name">print</span>(<span class="hljs-string">&quot;Score = %.1f:&quot;</span> % alignment.score)<br>    <span class="hljs-builtin-name">print</span>(alignment)<br><span class="hljs-builtin-name">print</span>(<span class="hljs-string">&quot;#######################结果分割线##########################&quot;</span>)<br>aligner.mode = <span class="hljs-string">&#x27;global&#x27;</span><br><span class="hljs-comment"># 自定义得分相同字符得 2 分，不相同字符扣 1 分。</span><br>aligner.match_score = 2<br>aligner.mismatch_score = -1<br><span class="hljs-comment"># 自定义缺口罚分</span><br>aligner.open_gap_score = -0.5<br>aligner.extend_gap_score = -0.1<br>aligner.target_end_gap_score = 0.0<br>aligner.query_end_gap_score = 0.0<br><span class="hljs-keyword">for</span> alignment <span class="hljs-keyword">in</span> aligner.align(<span class="hljs-string">&quot;TACCG&quot;</span>, <span class="hljs-string">&quot;ACG&quot;</span>):<br>    <span class="hljs-builtin-name">print</span>(<span class="hljs-string">&quot;Score = %.1f:&quot;</span> % alignment.score)<br>    <span class="hljs-builtin-name">print</span>(alignment)<br></code></pre></td></tr></table></figure><h4 id="2、结果-1"><a href="#2、结果-1" class="headerlink" title="2、结果"></a>2、结果</h4><img src="../python实现Needleman-Wunsch算法/image-20211106193459776.png">]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HiC-Pro3的安装和官方测试数据的运行</title>
    <link href="/2022/01/16/HiC-Pro3%E5%AE%89%E8%A3%85%E5%92%8C%E5%AE%98%E6%96%B9%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE%E7%9A%84%E8%BF%90%E8%A1%8C/"/>
    <url>/2022/01/16/HiC-Pro3%E5%AE%89%E8%A3%85%E5%92%8C%E5%AE%98%E6%96%B9%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE%E7%9A%84%E8%BF%90%E8%A1%8C/</url>
    
    <content type="html"><![CDATA[<h3 id="一、HiC-Pro3安装流程"><a href="#一、HiC-Pro3安装流程" class="headerlink" title="一、HiC-Pro3安装流程"></a>一、HiC-Pro3安装流程</h3><h4 id="1、需要的条件"><a href="#1、需要的条件" class="headerlink" title="1、需要的条件"></a>1、需要的条件</h4><figure class="highlight vala"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta">#一个服务器或者配置很好的个人电脑</span><br></code></pre></td></tr></table></figure><h4 id="2、正式安装HiC-Pro3"><a href="#2、正式安装HiC-Pro3" class="headerlink" title="2、正式安装HiC-Pro3"></a>2、正式安装HiC-Pro3</h4><h5 id="HiC-Pro依赖的软件"><a href="#HiC-Pro依赖的软件" class="headerlink" title="HiC-Pro依赖的软件"></a>HiC-Pro依赖的软件</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#创建hic-pro专门的conda环境</span><br><span class="hljs-comment">#注意你安装的conda版本和hicpro尽量同版本3.x或者2.x,如果不同后期会疯狂报错</span><br>conda create -n hicpro3 python=<span class="hljs-number">3.7</span><br>conda activate hicpro3<br><span class="hljs-comment">#以下都是在hicpro3的环境下完成的</span><br>python3<span class="hljs-number">.7</span> -m pip install bx-python<br>python3<span class="hljs-number">.7</span> -m pip install iced<br>python3<span class="hljs-number">.7</span> -m pip install scipy<br>python3<span class="hljs-number">.7</span> -m pip install pysam<br>python3<span class="hljs-number">.7</span> -m pip install pandas<br><span class="hljs-comment">#查看python包都安在哪儿了</span><br>pip <span class="hljs-built_in">list</span><br>pip show bx-python<br><span class="hljs-comment">#python包必须在的位置</span><br>/sde/ckm/miniconda3/envs/hicpro3/lib/python3<span class="hljs-number">.7</span>/site-packages<br></code></pre></td></tr></table></figure><h5 id="HiC-Pro下载"><a href="#HiC-Pro下载" class="headerlink" title="HiC-Pro下载"></a>HiC-Pro下载</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#历史版本https://github.com/nservant/HiC-Pro/releases</span><br>wget https://github.com/nservant/HiC-Pro/archive/refs/tags/HiC-Pro-<span class="hljs-number">3.1</span><span class="hljs-number">.0</span>.tar.gz<br>tar -zxvf HiC-Pro-<span class="hljs-number">3.1</span><span class="hljs-number">.0</span>.tar.gz<br>cd HiC-Pro-<span class="hljs-number">3.1</span><span class="hljs-number">.0</span>/<br><span class="hljs-comment">#查看并修改配置文件</span><br>vim config-install.txt<br>PREFIX = /sde/ckm/software/hicpro/HiC-Pro-<span class="hljs-number">3</span> <span class="hljs-comment">#最后安装目录，不要写当前路径，会报错</span><br>BOWTIE2_PATH = /sde/ckm/miniconda3/envs/hicpro3/<span class="hljs-built_in">bin</span>/bowtie2<br>SAMTOOLS_PATH = /sde/ckm/miniconda3/envs/hicpro3/<span class="hljs-built_in">bin</span>/samtools<br>R_PATH = /sde/ckm/miniconda3/envs/hicpro3/<span class="hljs-built_in">bin</span>/r<br>PYTHON_PATH = /sde/ckm/miniconda3/envs/hicpro3/<span class="hljs-built_in">bin</span>/python<br>CLUSTER_SYS = TORQUE<br></code></pre></td></tr></table></figure><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python">make configure <br><span class="hljs-comment">#报错了，说python的依赖包没安</span><br>- Python libraries ...<br>Can <span class="hljs-keyword">not</span> proceed without the required Python libraries, please install them <span class="hljs-keyword">and</span> re-run<br><span class="hljs-comment">#查看报错</span><br>cd /sde/ckm/software/hicpro/HiC-Pro-<span class="hljs-number">3.1</span><span class="hljs-number">.0</span>/tmp<br>cat check_python.log <span class="hljs-comment">#然后把缺的包安上，后续遇到其他报错同理</span><br><span class="hljs-comment">#报错，说R没安好</span><br>R packages NOT installed successfully. Look at the tmp/install_Rpackages.Rout <span class="hljs-keyword">for</span> additional informations<br><span class="hljs-comment">#查看报错</span><br>cd /sde/ckm/software/hicpro/HiC-Pro-<span class="hljs-number">3.1</span><span class="hljs-number">.0</span>/tmp<br>cat check_Rpackages.Rout<br><span class="hljs-comment">#后来发现是没有在hicpro3的环境，base环境没安R，在hicpro环境下就可以</span><br>make install<br><span class="hljs-comment">#报错</span><br>cp: cannot copy a directory, <span class="hljs-string">&#x27;/sde/ckm/software/hicpro/HiC-Pro-3.1.0&#x27;</span>, into itself, <span class="hljs-string">&#x27;/sde/ckm/software/hicpro/HiC-Pro-3.1.0/HiC-Pro_3.1.0/HiC-Pro-3.1.0&#x27;</span><br>make: *** [Makefile:<span class="hljs-number">78</span>: cp] Error <span class="hljs-number">1</span><br><span class="hljs-comment">#原因config-install.txt中设置PREFIX的软件依赖路径时写了当前路径，cp不行，所以新建一个目录就可以</span><br>HiC-Pro installed <span class="hljs-keyword">in</span> /sde/ckm/software/hicpro/HiC-Pro-<span class="hljs-number">3</span>/HiC-Pro_3<span class="hljs-number">.1</span><span class="hljs-number">.0</span> !<br></code></pre></td></tr></table></figure><h5 id="检查是否安好了"><a href="#检查是否安好了" class="headerlink" title="检查是否安好了"></a>检查是否安好了</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/sde/</span>ckm<span class="hljs-regexp">/software/</span>hicpro<span class="hljs-regexp">/HiC-Pro-3/</span>HiC-Pro_3.<span class="hljs-number">1.0</span><span class="hljs-regexp">/bin/</span>HiC-Pro -h<br></code></pre></td></tr></table></figure><h3 id="二、测试数据运行"><a href="#二、测试数据运行" class="headerlink" title="二、测试数据运行"></a>二、测试数据运行</h3><h4 id="1、检查一下"><a href="#1、检查一下" class="headerlink" title="1、检查一下"></a>1、检查一下</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#查看服务器上可用线程数</span><br>grep <span class="hljs-string">&#x27;processor&#x27;</span> /proc/cpuinfo | sort -u | wc -l<br><span class="hljs-comment">#查看线程</span><br>top -H<br></code></pre></td></tr></table></figure><h4 id="2、开始配置"><a href="#2、开始配置" class="headerlink" title="2、开始配置"></a>2、开始配置</h4><h5 id="必备文件"><a href="#必备文件" class="headerlink" title="必备文件"></a>必备文件</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#其实人和鼠不需建，原始annotation里有，学个方法</span><br><span class="hljs-comment">#1、建人的索引</span><br><span class="hljs-comment">#注意bowtie2不能对压缩的文件建索引，所以下载好的参考基因组必须要先解压</span><br>gunzip Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz<br>cd /sde/ckm/index/bowtie2/hg19<br>nohup bowtie2-build --threads <span class="hljs-number">10</span> ~/sde/ckm/reference/hg19/Homo_sapiens.GRCh38.dna.primary_assembly.fa ./hg19 &amp;<br><span class="hljs-comment">#2、自己建bed文件</span><br>nohup /sde/ckm/software/hicpro/HiC-Pro-<span class="hljs-number">3</span>/HiC-Pro_3<span class="hljs-number">.1</span><span class="hljs-number">.0</span>/<span class="hljs-built_in">bin</span>/utils/digest_genome.py ~/sde/ckm/reference/hg19/Homo_sapiens.GRCh38.dna.primary_assembly.fa -r hindiii -o HindIII_resfrag_hg19.bed &amp;<br><span class="hljs-comment">#3、基因组中序列大小文件</span><br><span class="hljs-comment">#samtools faidx 能够对fasta 序列建立一个后缀为.fai 的文件，根据这个.fai 文件和原始的fastsa文件， 能够快速的提取任意区域的序列</span><br>samtools faidx ~/sde/ckm/reference/hg9/Homo_sapiens.GRCh38.dna.primary_assembly.fa<br>mv ~/sde/ckm/reference/hg9/Homo_sapiens.GRCh38.dna.primary_assembly.fa.fai ./<br>awk <span class="hljs-string">&#x27;&#123;print $1&quot;\t&quot; $2&#125;&#x27;</span> Homo_sapiens.GRCh38.dna.primary_assembly.fa.fai &gt;chrom_hg19_old.sizes<br>num=<span class="hljs-number">5</span><br>awk -v x=$num <span class="hljs-string">&#x27;&#123;if(length($1)&lt;=x)&#123;print $0&#125;&#125;&#x27;</span> chrom_hg19_old.sizes &gt; chrom_hg19.sizes<br></code></pre></td></tr></table></figure><h5 id="运行前的准备工作"><a href="#运行前的准备工作" class="headerlink" title="运行前的准备工作"></a>运行前的准备工作</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#1、其中BED文件和table文件必须要放在HiC-Pro_3.1.0/annotation目录下</span><br><span class="hljs-comment">#BED文件：记录可能的酶切位点，table文件记录每条contig/scaffold/chromosome的长度</span><br><span class="hljs-comment">#2、新建比对序列的文件,注意文件夹应以样品名命名</span><br>cd /sde/ckm/Hi-C/hicpro<br>mkdir hic_input/test_data<br><span class="hljs-comment">#下载数据</span><br>wget https://zerkalo.curie.fr/partage/HiC-Pro/HiCPro_testdata.tar.gz &amp;&amp; tar -zxvf HiCPro_testdata.tar.gz<br><span class="hljs-comment">#3、将config-hicpro.txt拷贝到当前目录</span><br>cd /sde/ckm/Hi-C/hicpro<br>cp /sde/ckm/software/hicpro/HiC-Pro-<span class="hljs-number">3</span>/HiC-Pro_3<span class="hljs-number">.1</span><span class="hljs-number">.0</span>/config-hicpro.txt ./<br>mv config-hicpro.txt config-hicpro-hg19.txt<br><span class="hljs-comment">#具体配置见下-------------------------------------------------</span><br>N_CPU = <span class="hljs-number">30</span>  <span class="hljs-comment">#bowtie2比对时CPU线程数</span><br>LOGFILE = hicpro.log  <span class="hljs-comment">#log文件名</span><br><span class="hljs-comment">#bowtie2建索引的路径</span><br>BOWTIE2_IDX_PATH = /sde/ckm/index/bowtie2/hg19<br><span class="hljs-comment">#前缀</span><br>REFERENCE_GENOME = hg19<br><span class="hljs-comment">#genome.sizes的绝对路径</span><br>GENOME_SIZE = /sde/ckm/software/hicpro/HiC-Pro-<span class="hljs-number">3</span>/HiC-Pro_3<span class="hljs-number">.1</span><span class="hljs-number">.0</span>/annotation/chrom_hg19.sizes<br><span class="hljs-comment">#消化位点绝对路径</span><br>GENOME_FRAGMENT = /sde/ckm/software/hicpro/HiC-Pro-<span class="hljs-number">3</span>/HiC-Pro_3<span class="hljs-number">.1</span><span class="hljs-number">.0</span>/annotation/HindIII_resfrag_hg19.bed<br><span class="hljs-comment">#不同酶切位点对应序列为HindIII(AAGCTAGCTT), MboI(GATCGATC) , DpnII(GATCGATC),NcoI(CCATGCATGG)</span><br>LIGATION_SITE = AAGCTAGCTT<br></code></pre></td></tr></table></figure><h4 id="3、运行"><a href="#3、运行" class="headerlink" title="3、运行"></a>3、运行</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#hic_output不要提前建，否则没法后台运行</span><br>cd /sde/ckm/Hi-C/hicpro<br>nohup /sde/ckm/software/hicpro/HiC-Pro-<span class="hljs-number">3</span>/HiC-Pro_3<span class="hljs-number">.1</span><span class="hljs-number">.0</span>/<span class="hljs-built_in">bin</span>/HiC-Pro -i hic_input_hg19 -o hic_output_hg19 -c config-hicpro-hg19.txt &amp;<br><span class="hljs-comment">#踩坑点</span><br><span class="hljs-comment">#注意ensamble参考基因组的染色体名称是1,而hicpro的给的参考bed文件是chr1,自己新建就可以,或者自己改一下</span><br><span class="hljs-comment">#否则报错/sde/ckm/software/hicpro/HiC-Pro-3/HiC-Pro_3.1.0/bin/../scripts//Makefile:178: recipe for target &#x27;hic_qc&#x27; failed</span><br><span class="hljs-comment">#mv chrom_hg19.sizes chrom_hg19_old.sizes</span><br><span class="hljs-comment">#删除前三个，i代表在原文件中修改</span><br>sed -i <span class="hljs-string">&#x27;s/...//&#x27;</span> chrom_hg19_old.sizes<br><span class="hljs-comment">#加上chr</span><br>sed -i <span class="hljs-string">&#x27;s/^/chr&amp;/g&#x27;</span> chrom_hg19_old.sizes<br><span class="hljs-comment">#没有chr的文件</span><br>sed <span class="hljs-string">&#x27;s/...//&#x27;</span> chrom_hg19_old.sizes &gt; chrom_hg19.sizes<br><span class="hljs-comment">#bed文件同理</span><br>mv HindIII_resfrag_hg19.bed HindIII_resfrag_hg19_old.bed<br>sed <span class="hljs-string">&#x27;s/...//&#x27;</span> HindIII_resfrag_hg19_old.bed &gt; HindIII_resfrag_hg19.bed<br></code></pre></td></tr></table></figure><h4 id="4、结果"><a href="#4、结果" class="headerlink" title="4、结果"></a>4、结果</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#结果hic_results/有4个文件夹</span><br>data<span class="hljs-regexp">/ matrix/</span> pic<span class="hljs-regexp">/ stats/</span><br></code></pre></td></tr></table></figure><img src="../HiC-Pro3安装和官方测试数据的运行/1.png"><img src="../HiC-Pro3安装和官方测试数据的运行/2.png"><img src="../HiC-Pro3安装和官方测试数据的运行/3.png"><img src="../HiC-Pro3安装和官方测试数据的运行/4.png">]]></content>
    
    
    
    <tags>
      
      <tag>三维基因组</tag>
      
      <tag>Hi-C</tag>
      
      <tag>组学分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用hexo和github搭建个人博客</title>
    <link href="/2022/01/16/%E4%BD%BF%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/01/16/%E4%BD%BF%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="使用hexo和github-pages搭建个人博客"><a href="#使用hexo和github-pages搭建个人博客" class="headerlink" title="使用hexo和github pages搭建个人博客"></a>使用hexo和github pages搭建个人博客</h2><h4 id="0、需要的软件"><a href="#0、需要的软件" class="headerlink" title="0、需要的软件"></a>0、需要的软件</h4><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">nodejs：https://nodejs.org/en/download/</span><br><span class="hljs-meta">#</span><span class="bash">git：https://git-scm.com/download/win</span><br><span class="hljs-meta">#</span><span class="bash">hexo官网：https://hexo.io/zh-cn/</span><br></code></pre></td></tr></table></figure><h4 id="1、建立github-pages的基础网页"><a href="#1、建立github-pages的基础网页" class="headerlink" title="1、建立github pages的基础网页"></a>1、建立github pages的基础网页</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">新建一个仓库，仓库名应该是：你的github用户名.github.io</span><br></code></pre></td></tr></table></figure><img src="../使用hexo和github搭建个人博客/image-20220116155404134.png"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">进入用户名.github.io仓库的settings，下拉到最后，进入github pages</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">choose a theme可以选择github pages自带的主题，<span class="hljs-built_in">source</span>选择main，然后save。访问https://用户名.github.io/应该可以看到基础的界面，成功了是绿色</span><br></code></pre></td></tr></table></figure><img src="../使用hexo和github搭建个人博客/image-20220116160704195.png"><h4 id="2、使用hexo使博客更加好看-windows系统下"><a href="#2、使用hexo使博客更加好看-windows系统下" class="headerlink" title="2、使用hexo使博客更加好看(windows系统下)"></a>2、使用hexo使博客更加好看(windows系统下)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">安装nodejs好后，打开nodejs</span><br>npm install -g hexo-cli    #安装hexo<br><span class="hljs-meta">#</span><span class="bash">切换到cmd中，进入到你希望博客安装位置</span><br>hexo init x #创建一个hexo项目<br>cd x<br>npm install<br><span class="hljs-meta">#</span><span class="bash">本地启动</span><br>hexo g<br>hexo server<br><span class="hljs-meta">#</span><span class="bash">浏览器访问 http://localhost:4000，可以看到hexo的默认界面</span><br><span class="hljs-meta">#</span><span class="bash">本地则会出现如下界面</span><br></code></pre></td></tr></table></figure><p><img src="image-20220116161835269.png"></p><h4 id="3、hexo主题配置"><a href="#3、hexo主题配置" class="headerlink" title="3、hexo主题配置"></a>3、hexo主题配置</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#我选择的是fluid主题：https://github.com/fluid-dev/hexo-theme-fluid</span><br><span class="hljs-comment">#将项目clone到本地的theme文件夹下</span><br>git clone https://github.com/fluid-dev/hexo-theme-fluid.git<span class="hljs-comment">#或者download zip解压</span><br></code></pre></td></tr></table></figure><h5 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">打开本地项目的_config.yml文件（我用的是notepad++）</span><br>theme: fluid  # 指定主题<br>language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改<br></code></pre></td></tr></table></figure><h5 id="创建about"><a href="#创建about" class="headerlink" title="创建about"></a>创建about</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">hexo new page about<br><span class="hljs-comment">#创建成功后，编辑博客目录下 /source/about/index.md，添加 layout 属性。</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">---</span><br><span class="hljs-string">title: about</span><br><span class="hljs-string">date: 2022-01-16 15:15:39</span><br><span class="hljs-string">layout: about</span><br><span class="hljs-string">---</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>hexo g -d <span class="hljs-comment">#更新</span><br>hexo s<br><span class="hljs-comment">#浏览器访问 http://localhost:4000，可以修改后的主题</span><br></code></pre></td></tr></table></figure><h5 id="创建测试文章"><a href="#创建测试文章" class="headerlink" title="创建测试文章"></a>创建测试文章</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">修改_config.yml</span><br>post_asset_folder: true #在生成文章的时候生成一个同名的资源目录用于存放图片文件。<br>hexo new post #测试文章执行完成后在source\_posts目录下生成了一个md文件和一个同名的资源目录<br><span class="hljs-meta">#</span><span class="bash">本地启动</span><br>hexo g -d<br>hexo s<br></code></pre></td></tr></table></figure><h5 id="个性化展示"><a href="#个性化展示" class="headerlink" title="个性化展示"></a>个性化展示</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">浏览器tab页名称：修改根目录下_config.yml中的title字段，如图</span><br></code></pre></td></tr></table></figure><p><img src="image-20220116163721344.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">博客标题：主题目录themes\fluid下_config.yml中的blog_title字段。</span><br></code></pre></td></tr></table></figure><p><img src="image-20220116164353436.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">主页正中间的文字：主题目录 themes\fluid下的_config.yml中的text字段。</span><br></code></pre></td></tr></table></figure><p><img src="image-20220116164811694.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">更多详见https://hexo.fluid-dev.com/docs/start/</span><br></code></pre></td></tr></table></figure><h4 id="4、git联通github"><a href="#4、git联通github" class="headerlink" title="4、git联通github"></a>4、git联通github</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~/.ssh<br><span class="hljs-meta">#</span><span class="bash">x代表你申请github时的用户名，y代表申请github时的邮箱</span><br>git config --global user.name &quot;x&quot;<br>git config --global user.email &quot;y&quot;<br>ssh-keygen -t rsa -C &quot;y&quot;<br>ls #应该出现这两个文件id_rsa  id_rsa.pub<br>cat id_rsa.pub #复制里面的东西<br><span class="hljs-meta">#</span><span class="bash">到github中点头像选settings---SSH and GPG keys---New SSH key---新建名字随便，将上边的秘钥复制</span><br></code></pre></td></tr></table></figure><img src="../使用hexo和github搭建个人博客/image-20220116154930013.png"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">测试连通性</span><br>ssh -T git@github.com<br><span class="hljs-meta">#</span><span class="bash">出现以下即成功</span><br></code></pre></td></tr></table></figure><p><img src="image-20220116155035410.png"></p><h4 id="5、部署到github上"><a href="#5、部署到github上" class="headerlink" title="5、部署到github上"></a>5、部署到github上</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">安装hexo-deployer-git</span><br>npm install hexo-deployer-git --save<br><span class="hljs-meta">#</span><span class="bash">根目录修改_config.yml</span><br>hexo g -d<br></code></pre></td></tr></table></figure><p><img src="image-20220116163655522.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">hexo g -d</span><br><span class="hljs-meta">#</span><span class="bash">通过网页访问https://caigouchen.github.io/</span><br></code></pre></td></tr></table></figure><h4 id="6、参考"><a href="#6、参考" class="headerlink" title="6、参考"></a>6、参考</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">1、https://blog.csdn.net/yaorongke/article/details/119089190</span><br><span class="hljs-meta">#</span><span class="bash">2、https://zhuanlan.zhihu.com/p/111614119</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
